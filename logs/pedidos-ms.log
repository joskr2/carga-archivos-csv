2025-08-04 07:27:18.715 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Starting PedidosMsApplicationTests using Java 17.0.15 with PID 89543 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:27:18.716 [main] DEBUG [] [] c.j.p.PedidosMsApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:27:18.716 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - The following 1 profile is active: "test"
2025-08-04 07:27:19.222 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:27:19.279 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 3 JPA repository interfaces.
2025-08-04 07:27:19.732 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:27:19.747 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:27:19.853 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:27:19.854 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:27:19.868 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:27:20.300 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:27:20.302 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:27:20.302 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:27:20.305 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:27:20.308 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:27:20.309 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:27:20.309 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:27:20.315 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:27:20.318 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:27:20.656 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:27:20.702 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:27:20.716 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:27:20.722 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:27:20.723 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:27:20.726 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:27:20.728 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:27:20.728 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:27:20.729 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:27:20.729 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:27:20.798 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:27:21.060 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:27:21.072 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:27:21.120 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Started PedidosMsApplicationTests in 2.628 seconds (process running for 5.655)
2025-08-04 07:27:21.426 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest]: PedidoControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 07:27:21.437 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest
2025-08-04 07:27:21.439 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:27:21.456 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 89543 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:27:21.456 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:27:21.456 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 07:27:21.587 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:27:21.595 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 07:27:21.652 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:27:21.652 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 07:27:21.662 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:27:21.662 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 07:27:21.662 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:27:21.680 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:27:21.681 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:27:21.681 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:27:21.682 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:27:21.682 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:27:21.683 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:27:21.683 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:27:21.684 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:27:21.686 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:27:21.713 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:27:21.718 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:27:21.719 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:27:21.720 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:27:21.720 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:27:21.722 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:27:21.723 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:27:21.723 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:27:21.724 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:27:21.725 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:27:21.740 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:27:21.811 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:27:21.823 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:27:21.823 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:27:21.825 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:27:21.829 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 07:27:21.841 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 0.402 seconds (process running for 6.377)
2025-08-04 07:27:21.846 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:27:21.849 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 07:27:21.851 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:27:21.882 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: a915783a - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:27:21.882 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:27:21.888 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:27:21.889 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:27:21.889 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:27:21.916 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:27:21.917 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:27:21.918 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:27:21.918 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:27:21.919 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:27:21.919 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:27:21.920 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:27:21.920 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:27:21.920 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:27:21.920 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:27:21.921 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:27:21.921 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:27:21.921 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:27:21.921 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:27:21.923 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:27:21.923 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:27:21.923 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:27:21.924 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:27:21.927 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 07:27:21.928 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:27:21.929 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:27:21.929 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: a915783a - Procesamiento completado en 47ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:27:21.929 [main] ERROR [] [] c.j.p.i.controller.PedidoController - [[ERROR_SISTEMA, a915783a]] Request ID: {} - Error inesperado al procesar archivo
java.lang.UnsupportedOperationException: null
	at java.base/java.util.ImmutableCollections.uoe(ImmutableCollections.java:142)
	at java.base/java.util.ImmutableCollections$AbstractImmutableMap.put(ImmutableCollections.java:1072)
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest.cargarCsvConUnPedidoValidoDebeResponderCorrectamente(PedidoControllerIntegrationTest.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-08-04 07:27:21.967 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:27:21.968 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:27:21.971 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:27:21.971 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:27:21.972 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:27:21.973 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:27:21.975 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:27:21.975 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:27:21.976 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:27:21.976 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:27:21.976 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 07:27:21.980 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 07:28:24.960 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Starting PedidosMsApplicationTests using Java 17.0.15 with PID 90137 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:28:24.961 [main] DEBUG [] [] c.j.p.PedidosMsApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:28:24.961 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - The following 1 profile is active: "test"
2025-08-04 07:28:25.439 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:28:25.468 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 3 JPA repository interfaces.
2025-08-04 07:28:25.863 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:28:25.877 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:28:25.965 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:28:25.966 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:28:25.983 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:28:26.404 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:28:26.405 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:28:26.406 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:28:26.408 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:28:26.412 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:28:26.412 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:28:26.413 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:28:26.418 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:28:26.421 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:28:26.762 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:28:26.806 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:28:26.819 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:28:26.826 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:28:26.827 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:28:26.828 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:28:26.829 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:28:26.830 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:28:26.831 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:28:26.831 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:28:26.888 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:28:27.190 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:28:27.204 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:28:27.257 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Started PedidosMsApplicationTests in 2.499 seconds (process running for 2.996)
2025-08-04 07:28:27.641 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest]: PedidoControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 07:28:27.652 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest
2025-08-04 07:28:27.654 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:28:27.670 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 90137 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:28:27.670 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:28:27.670 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 07:28:27.803 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:28:27.808 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 07:28:27.860 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:28:27.861 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 07:28:27.862 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:28:27.862 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 07:28:27.862 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:28:27.876 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:28:27.877 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:28:27.878 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:28:27.878 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:28:27.879 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:28:27.879 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:28:27.880 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:28:27.880 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:28:27.881 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:28:27.907 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:28:27.913 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:28:27.914 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:28:27.915 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:28:27.915 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:28:27.916 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:28:27.917 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:28:27.917 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:28:27.918 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:28:27.918 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:28:27.942 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:28:28.002 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:28:28.046 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:28:28.046 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:28:28.048 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:28:28.051 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 07:28:28.077 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 0.423 seconds (process running for 3.817)
2025-08-04 07:28:28.082 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:28:28.085 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 07:28:28.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:28:28.133 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: d4f605e1 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:28:28.134 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:28:28.159 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:28:28.159 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:28:28.159 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:28:28.205 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:28:28.206 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:28:28.206 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:28:28.208 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:28:28.209 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:28:28.209 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:28:28.210 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:28:28.211 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:28:28.211 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:28:28.211 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:28:28.212 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:28:28.212 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:28:28.213 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:28:28.213 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:28:28.214 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:28:28.214 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:28:28.214 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:28:28.215 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:28:28.218 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 07:28:28.219 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:28:28.219 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:28:28.219 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: d4f605e1 - Procesamiento completado en 85ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:28:28.545 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 07:28:28.545 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:28:28.545 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:28:28.546 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:28:28.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:28:28.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:28:28.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 07:28:28.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:28:28.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:28:28.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:28:28.549 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:28:28.549 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:28:28.549 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:28:28.549 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:28:28.549 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:28:28.549 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:28:28.550 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:28:28.550 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:28:28.550 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:28:28.550 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:28:28.550 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 07:28:28.551 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 07:28:28.551 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:28:28.551 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:28:28.551 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:28:28.551 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:28:28.551 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 07:28:28.552 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 07:28:28.552 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:28:28.552 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:28:28.552 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:28:28.552 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:28:28.553 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 07:28:28.586 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:28:28.587 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:28:28.588 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:28:28.588 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:28:28.591 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:28:28.594 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:28:28.598 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:28:28.599 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:28:28.599 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:28:28.599 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:28:28.600 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 07:28:28.600 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 07:46:29.223 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 96188 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:46:29.225 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:46:29.225 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:46:29.702 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:46:29.734 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 3 JPA repository interfaces.
2025-08-04 07:46:30.165 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:46:30.180 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:46:30.280 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:46:30.281 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:46:30.294 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:46:30.712 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:46:30.714 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:46:30.714 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:46:30.717 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:46:30.720 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:46:30.721 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:46:30.722 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:46:30.728 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:46:30.731 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:46:31.073 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:46:31.115 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:31.130 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:46:31.137 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:31.137 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:46:31.140 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:46:31.142 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:31.143 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:46:31.144 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:31.145 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:46:31.209 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:46:31.458 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:46:31.475 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:46:31.475 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:46:31.479 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:46:31.486 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 11 ms
2025-08-04 07:46:31.529 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 2.535 seconds (process running for 3.199)
2025-08-04 07:46:31.825 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:31.828 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 07:46:31.831 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:31.861 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 553f54c2 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:46:31.862 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:46:31.868 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:46:31.869 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:46:31.869 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:46:31.905 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:46:31.907 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:46:31.907 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:46:31.908 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:31.909 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:46:31.909 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:46:31.910 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:46:31.910 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:46:31.910 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:46:31.911 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:46:31.911 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:31.912 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:46:31.912 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:46:31.912 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:46:31.913 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:46:31.914 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:46:31.914 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:46:31.915 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:46:31.918 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 07:46:31.919 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:46:31.920 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:46:31.920 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 553f54c2 - Procesamiento completado en 58ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:46:31.971 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:31.972 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:31.974 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c846b0df - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 07:46:31.974 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 07:46:31.978 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245)
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610)
	at com.opencsv.CSVReader.readNext(CSVReader.java:204)
	at com.opencsv.CSVReader.readAll(CSVReader.java:186)
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57)
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
2025-08-04 07:46:31.982 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 07:46:31.994 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:31.996 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.000 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c6be4316 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 07:46:32.000 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: c6be4316 - Archivo vacío recibido
2025-08-04 07:46:32.001 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 07:46:32.011 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:32.015 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.018 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 4dc7cc9d - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 07:46:32.019 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 07:46:32.019 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:46:32.019 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:46:32.019 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:46:32.020 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:46:32.022 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_INVALIDO] Número de pedido duplicado en base de datos: P001
2025-08-04 07:46:32.022 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:46:32.024 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:32.024 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:46:32.024 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:46:32.025 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:46:32.025 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 07:46:32.025 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:46:32.025 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 07:46:32.026 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.028 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:46:32.028 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 5 errores: [Número de pedido duplicado, Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:46:32.028 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 5 errores de validación
2025-08-04 07:46:32.028 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 5
2025-08-04 07:46:32.028 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 4dc7cc9d - Procesamiento completado en 9ms - Total: 1, Guardados: 0, Tipos de errores: 5
2025-08-04 07:46:32.029 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 4dc7cc9d - Errores de validación encontrados: 5 errores totales
2025-08-04 07:46:32.044 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:32.048 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.052 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c5d354eb - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 07:46:32.053 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: c5d354eb - Formato de archivo inválido: pedidos.txt
2025-08-04 07:46:32.054 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 07:46:32.070 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:32.074 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.077 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: a0ec49ac - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 07:46:32.077 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 07:46:32.078 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:46:32.078 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:46:32.078 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:46:32.080 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:46:32.080 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_INVALIDO] Número de pedido duplicado en base de datos: P001
2025-08-04 07:46:32.080 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:46:32.081 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:46:32.082 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.082 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:46:32.082 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 1 errores: [Número de pedido duplicado]
2025-08-04 07:46:32.082 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 1 errores de validación
2025-08-04 07:46:32.082 [main] DEBUG [P002] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:46:32.082 [main] INFO  [P002] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:46:32.083 [main] DEBUG [P002] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:46:32.083 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:46:32.083 [main] DEBUG [P002] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:46:32.084 [main] DEBUG [P002] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:46:32.084 [main] WARN  [P002] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:46:32.084 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:46:32.084 [main] WARN  [P002] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:46:32.084 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:46:32.085 [main] WARN  [P002] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:46:32.085 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 07:46:32.086 [main] DEBUG [P002] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:46:32.086 [main] WARN  [P002] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:46:32.086 [main] INFO  [P002] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:46:32.086 [main] WARN  [P002] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:46:32.086 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 0, Errores: 5
2025-08-04 07:46:32.086 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: a0ec49ac - Procesamiento completado en 9ms - Total: 2, Guardados: 0, Tipos de errores: 5
2025-08-04 07:46:32.086 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: a0ec49ac - Errores de validación encontrados: 5 errores totales
2025-08-04 07:46:32.116 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:46:32.117 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:46:32.118 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:46:32.119 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:46:32.122 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:46:32.127 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:47:04.583 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 96831 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:47:04.584 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:47:04.584 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:47:05.064 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:47:05.094 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 3 JPA repository interfaces.
2025-08-04 07:47:05.483 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:47:05.497 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:47:05.580 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:47:05.581 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:47:05.594 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:47:06.003 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:47:06.005 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:47:06.005 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:47:06.007 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:47:06.010 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:47:06.011 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:47:06.012 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:47:06.017 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:47:06.020 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:47:06.357 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:47:06.402 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:06.415 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:47:06.421 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:06.422 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:47:06.424 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:47:06.425 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:06.426 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:47:06.427 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:06.427 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:47:06.482 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:47:06.733 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:47:06.752 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:47:06.752 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:47:06.756 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:47:06.766 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 14 ms
2025-08-04 07:47:06.813 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 2.445 seconds (process running for 2.937)
2025-08-04 07:47:07.084 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:07.087 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 07:47:07.090 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:07.120 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: f8fe5311 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 07:47:07.120 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 07:47:07.127 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:47:07.127 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:47:07.127 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:47:07.168 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:47:07.170 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:47:07.170 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:47:07.170 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:07.171 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:47:07.171 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:47:07.172 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:47:07.172 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:47:07.172 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:47:07.172 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:47:07.172 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:07.173 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:47:07.173 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:47:07.173 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:47:07.174 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:47:07.174 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:47:07.174 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:47:07.174 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:47:07.175 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:47:07.175 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:47:07.175 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:47:07.176 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:07.176 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:47:07.176 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:47:07.176 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:47:07.176 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:47:07.176 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:47:07.176 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 07:47:07.177 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:07.177 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:47:07.177 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:47:07.177 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:47:07.177 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:47:07.178 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:47:07.180 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 07:47:07.181 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:47:07.182 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 07:47:07.182 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: f8fe5311 - Procesamiento completado en 62ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 07:47:07.182 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: f8fe5311 - Errores de validación encontrados: 4 errores totales
2025-08-04 07:47:07.255 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:47:07.255 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:47:07.256 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:47:07.258 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:47:07.259 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:47:07.260 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:47:20.206 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 96982 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:47:20.206 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:47:20.207 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:47:20.747 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:47:20.787 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 3 JPA repository interfaces.
2025-08-04 07:47:21.265 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:47:21.285 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:47:21.415 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:47:21.417 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:47:21.431 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:47:22.012 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:47:22.017 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:47:22.018 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:47:22.023 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:47:22.028 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:47:22.029 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:47:22.031 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:47:22.038 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:47:22.043 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:47:22.417 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:47:22.468 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:22.486 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:47:22.489 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:22.490 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:47:22.493 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:47:22.494 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:22.496 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:47:22.497 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:22.497 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:47:22.574 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:47:22.888 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:47:22.907 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:47:22.908 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:47:22.912 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:47:22.920 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 12 ms
2025-08-04 07:47:22.970 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 2.982 seconds (process running for 3.959)
2025-08-04 07:47:23.274 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.278 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 07:47:23.280 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.310 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 3f5cf53f - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:47:23.310 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:47:23.317 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:47:23.317 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:47:23.317 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:47:23.344 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:47:23.346 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:47:23.346 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:47:23.347 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.348 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:47:23.348 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:47:23.349 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:47:23.349 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:47:23.349 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:47:23.349 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:47:23.350 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.351 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:47:23.351 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:47:23.351 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:47:23.352 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:47:23.353 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:47:23.353 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:47:23.354 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:47:23.357 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 07:47:23.359 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:47:23.359 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:47:23.359 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 3f5cf53f - Procesamiento completado en 49ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:47:23.411 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.412 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.414 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 1133416a - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 07:47:23.414 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 07:47:23.417 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245)
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610)
	at com.opencsv.CSVReader.readNext(CSVReader.java:204)
	at com.opencsv.CSVReader.readAll(CSVReader.java:186)
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57)
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
2025-08-04 07:47:23.423 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 07:47:23.440 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.441 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.443 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 49a97d84 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 07:47:23.443 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 49a97d84 - Archivo vacío recibido
2025-08-04 07:47:23.444 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 07:47:23.455 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.460 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.466 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 0eedf51d - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 07:47:23.472 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 07:47:23.472 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:47:23.473 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:47:23.473 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:47:23.475 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:47:23.477 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_INVALIDO] Número de pedido duplicado en base de datos: P001
2025-08-04 07:47:23.477 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:47:23.478 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.478 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:47:23.478 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:47:23.478 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:47:23.478 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 07:47:23.479 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:47:23.479 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 07:47:23.480 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.481 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:47:23.481 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 5 errores: [Número de pedido duplicado, Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:47:23.481 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 5 errores de validación
2025-08-04 07:47:23.482 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 5
2025-08-04 07:47:23.482 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 0eedf51d - Procesamiento completado en 10ms - Total: 1, Guardados: 0, Tipos de errores: 5
2025-08-04 07:47:23.484 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 0eedf51d - Errores de validación encontrados: 5 errores totales
2025-08-04 07:47:23.501 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.504 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.506 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 60113ccb - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 07:47:23.507 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 60113ccb - Formato de archivo inválido: pedidos.txt
2025-08-04 07:47:23.507 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 07:47:23.514 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.516 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.518 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: ce3496ca - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 07:47:23.518 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 07:47:23.518 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:47:23.518 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:47:23.518 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:47:23.519 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:47:23.520 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_INVALIDO] Número de pedido duplicado en base de datos: P001
2025-08-04 07:47:23.520 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:47:23.521 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.522 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:47:23.522 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:47:23.522 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:47:23.522 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:47:23.522 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:47:23.522 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:47:23.523 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.523 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:47:23.523 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 1 errores: [Número de pedido duplicado]
2025-08-04 07:47:23.523 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 1 errores de validación
2025-08-04 07:47:23.523 [main] DEBUG [P002] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:47:23.524 [main] INFO  [P002] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:47:23.524 [main] DEBUG [P002] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:47:23.525 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:47:23.525 [main] DEBUG [P002] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:47:23.525 [main] DEBUG [P002] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:47:23.526 [main] WARN  [P002] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:47:23.526 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:47:23.526 [main] WARN  [P002] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:47:23.526 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:47:23.527 [main] WARN  [P002] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:47:23.527 [main] DEBUG [P002] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 07:47:23.530 [main] DEBUG [P002] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:47:23.532 [main] WARN  [P002] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:47:23.532 [main] INFO  [P002] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:47:23.532 [main] WARN  [P002] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:47:23.532 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 0, Errores: 5
2025-08-04 07:47:23.532 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: ce3496ca - Procesamiento completado en 14ms - Total: 2, Guardados: 0, Tipos de errores: 5
2025-08-04 07:47:23.532 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: ce3496ca - Errores de validación encontrados: 5 errores totales
2025-08-04 07:47:23.555 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:47:23.557 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:47:23.558 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:47:23.559 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:47:23.562 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:47:23.565 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:48:23.949 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:23.950 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:23.951 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:24.421 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:24.451 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:24.866 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:24.883 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:48:24.988 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:24.989 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:48:25.002 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:25.426 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:25.428 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:25.428 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:25.431 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:25.469 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:25.507 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:25.509 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:25.539 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:25.542 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:25.898 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:25.945 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:25.959 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:25.962 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:25.963 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:25.965 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:25.967 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:25.968 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:25.969 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:25.970 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:26.028 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:26.285 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:26.305 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:26.305 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:26.309 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:26.316 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 11 ms
2025-08-04 07:48:26.355 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 2.621 seconds (process running for 3.219)
2025-08-04 07:48:26.385 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:26.386 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:26.387 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:26.387 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:26.389 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:48:26.390 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:48:26.393 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:26.413 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:26.414 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:26.414 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:26.541 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:26.547 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:26.597 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:26.598 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 07:48:26.598 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:26.598 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 07:48:26.599 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:26.613 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:26.613 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:26.613 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:26.613 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:26.614 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:26.615 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:26.616 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:26.617 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:26.618 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:26.643 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:26.649 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:26.650 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:26.651 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:26.652 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:26.653 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:26.654 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:26.655 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:26.656 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:26.657 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:26.674 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:26.743 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:26.749 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:26.749 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:26.751 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:26.755 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 07:48:26.777 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.384 seconds (process running for 3.641)
2025-08-04 07:48:27.039 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:27.042 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:27.045 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:27.046 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:27.046 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:27.046 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:27.047 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.077 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: a949ca0e - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:48:27.077 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:48:27.083 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:48:27.084 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:27.084 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:27.121 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:27.124 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:27.124 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:48:27.126 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:48:27.126 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:48:27.127 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:48:27.127 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:48:27.127 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:48:27.127 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:48:27.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:48:27.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:48:27.129 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:48:27.129 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:48:27.129 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:48:27.129 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:48:27.131 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:48:27.133 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:48:27.133 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:48:27.133 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: a949ca0e - Procesamiento completado en 56ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:48:27.183 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:27.183 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:27.184 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:27.184 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:27.185 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 07:48:27.186 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 07:48:27.188 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:27.204 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:27.205 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:27.205 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:27.313 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:27.318 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:27.354 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:27.354 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 07:48:27.355 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:27.355 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 07:48:27.355 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:27.369 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:27.369 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:27.369 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:27.369 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:27.370 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:27.371 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:27.371 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:27.372 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:27.373 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:27.397 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:27.402 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:27.403 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:27.404 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:27.405 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:27.406 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:27.407 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.409 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:27.410 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.411 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:27.425 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:27.482 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:27.487 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:27.487 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:27.488 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:27.493 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 07:48:27.511 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.323 seconds (process running for 4.375)
2025-08-04 07:48:27.515 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:27.517 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:27.518 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:27.518 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:27.519 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:27.519 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:27.520 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.523 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: f3427cec - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 07:48:27.523 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 07:48:27.528 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 07:48:27.533 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 07:48:27.555 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:27.555 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:27.556 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:27.558 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:27.560 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 07:48:27.565 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 07:48:27.569 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:27.595 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:27.596 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:27.596 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:27.703 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:27.707 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:27.742 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:27.743 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 07:48:27.744 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn24: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:27.744 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 07:48:27.744 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:27.759 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:27.759 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:27.759 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:27.759 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:27.763 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:27.764 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:27.764 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:27.765 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:27.766 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:27.792 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:27.797 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:27.798 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:27.799 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:27.800 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:27.802 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:27.803 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.804 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:27.805 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.805 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:27.820 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:27.870 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:27.874 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:27.874 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:27.875 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:27.877 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-08-04 07:48:27.895 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.327 seconds (process running for 4.758)
2025-08-04 07:48:27.898 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:27.900 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:27.901 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:27.902 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:27.902 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:27.902 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:27.903 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:27.905 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c12d49f4 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 07:48:27.905 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: c12d49f4 - Archivo vacío recibido
2025-08-04 07:48:27.905 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 07:48:27.913 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:27.913 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:27.914 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:27.914 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:27.915 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 07:48:27.943 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 07:48:27.944 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:27.957 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:27.957 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:27.957 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:28.079 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:28.083 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:28.116 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:28.116 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 07:48:28.117 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn28: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:28.117 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 07:48:28.117 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:28.133 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:28.134 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:28.134 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:28.134 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:28.135 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:28.135 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:28.136 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:28.136 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:28.138 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:28.153 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:28.157 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.158 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:28.159 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.159 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:28.161 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:28.162 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.163 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:28.164 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.164 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:28.173 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:28.229 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:28.232 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:28.233 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:28.234 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:28.237 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 07:48:28.253 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.309 seconds (process running for 5.117)
2025-08-04 07:48:28.257 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:28.259 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:28.261 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:28.261 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:28.261 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:28.262 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:28.262 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.265 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 8e42616f - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 07:48:28.265 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 07:48:28.265 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:48:28.265 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:28.265 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:28.267 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:28.267 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:28.267 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:48:28.268 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.268 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:48:28.268 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:48:28.268 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:48:28.268 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 07:48:28.268 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:48:28.268 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 07:48:28.269 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.269 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:48:28.270 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:48:28.270 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:48:28.270 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 07:48:28.270 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 8e42616f - Procesamiento completado en 5ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 07:48:28.270 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 8e42616f - Errores de validación encontrados: 4 errores totales
2025-08-04 07:48:28.278 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:28.278 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:28.278 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:28.278 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:28.279 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 07:48:28.291 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 07:48:28.292 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:28.305 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:28.305 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:28.305 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:28.393 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:28.397 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:28.426 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:28.427 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 07:48:28.427 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn31: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:28.427 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 07:48:28.428 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:28.443 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:28.444 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:28.444 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:28.444 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:28.446 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:28.446 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:28.447 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:28.448 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:28.449 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:28.467 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:28.471 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.472 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:28.473 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.474 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:28.475 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:28.477 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.477 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:28.479 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.479 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:28.489 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:28.540 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:28.543 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:28.543 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:28.545 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:28.547 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 07:48:28.566 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.274 seconds (process running for 5.43)
2025-08-04 07:48:28.571 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:28.572 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:28.573 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:28.574 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:28.574 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:28.575 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:28.575 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.577 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 35ce947c - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 07:48:28.577 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 35ce947c - Formato de archivo inválido: pedidos.txt
2025-08-04 07:48:28.578 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 07:48:28.585 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:28.585 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:28.585 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:28.586 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:28.586 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 07:48:28.601 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 07:48:28.602 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:28.613 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97381 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:28.613 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:28.613 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:28.700 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:28.704 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:28.735 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:28.735 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 07:48:28.736 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn34: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:28.736 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 07:48:28.736 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:28.748 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:28.749 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:28.749 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:28.749 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:28.750 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:28.750 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:28.751 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:28.752 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:28.752 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:28.771 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:28.775 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.776 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:28.777 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.778 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:28.779 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:28.780 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.781 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:28.782 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.782 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:28.792 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:28.843 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:28.846 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:28.846 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:28.847 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:28.850 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 07:48:28.872 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.27 seconds (process running for 5.736)
2025-08-04 07:48:28.876 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:28.877 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:28.878 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:28.878 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:28.878 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:28.879 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:28.879 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.881 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 44b98837 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 07:48:28.881 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 07:48:28.881 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:48:28.881 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:28.881 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:28.883 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:28.883 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:28.883 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:48:28.884 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:48:28.885 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:48:28.885 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:48:28.885 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:48:28.885 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:48:28.885 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:48:28.885 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:48:28.886 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:28.886 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:48:28.886 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:48:28.887 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:28.887 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:48:28.887 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:48:28.887 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:48:28.887 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:48:28.887 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:48:28.888 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 07:48:28.888 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:28.888 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:48:28.889 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:48:28.889 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:48:28.889 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:48:28.890 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:48:28.891 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:48:28.892 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 07:48:28.892 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 44b98837 - Procesamiento completado en 11ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 07:48:28.892 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 44b98837 - Errores de validación encontrados: 4 errores totales
2025-08-04 07:48:28.903 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:28.903 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:28.904 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:28.904 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:28.905 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 07:48:28.912 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 07:48:39.916 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Starting PedidosMsApplicationTests using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:39.917 [main] DEBUG [] [] c.j.p.PedidosMsApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:39.918 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - The following 1 profile is active: "test"
2025-08-04 07:48:40.382 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:40.412 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:40.803 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:40.819 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 07:48:40.923 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:40.924 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 07:48:40.938 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:41.360 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:41.362 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:41.362 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:41.365 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:41.368 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:41.369 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:41.369 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:41.375 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:41.378 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:41.705 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:41.747 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:41.764 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:41.767 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:41.768 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:41.770 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:41.771 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:41.772 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:41.773 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:41.774 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:41.832 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:42.079 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:42.090 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:42.129 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Started PedidosMsApplicationTests in 2.428 seconds (process running for 2.994)
2025-08-04 07:48:42.422 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest]: PedidoControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 07:48:42.432 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest
2025-08-04 07:48:42.434 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:42.447 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:42.447 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:42.447 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 07:48:42.562 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:42.567 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:42.616 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:42.617 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 07:48:42.625 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:42.625 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 07:48:42.626 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:42.641 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:42.642 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:42.643 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:42.643 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:42.644 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:42.645 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:42.645 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:42.646 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:42.647 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:42.667 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:42.672 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:42.673 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:42.674 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:42.675 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:42.676 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:42.678 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:42.679 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:42.679 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:42.680 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:42.695 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:42.764 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:42.780 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:42.780 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:42.782 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:42.786 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 07:48:42.808 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 0.374 seconds (process running for 3.674)
2025-08-04 07:48:42.813 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:42.818 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 07:48:42.821 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:42.853 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 6736ebb1 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:48:42.853 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:48:42.860 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:48:42.860 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:42.860 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:42.887 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:42.889 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:42.889 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:48:42.890 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:42.892 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:48:42.892 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:48:42.893 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:48:42.893 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:48:42.893 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:48:42.893 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:48:42.893 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:42.894 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:48:42.894 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:48:42.894 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:48:42.896 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:48:42.896 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:48:42.896 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:48:42.897 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:48:42.899 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 07:48:42.901 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:48:42.901 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:48:42.901 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 6736ebb1 - Procesamiento completado en 48ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:48:42.954 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 07:48:42.957 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 07:48:42.962 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:42.963 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:42.963 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:42.963 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:42.965 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 07:48:42.974 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 07:48:42.976 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:42.990 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:42.990 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:42.991 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:43.100 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:43.104 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:43.140 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:43.141 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 07:48:43.141 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:43.141 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 07:48:43.142 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:43.155 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:43.155 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:43.155 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:43.155 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:43.156 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:43.157 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:43.158 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:43.159 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:43.160 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:43.179 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:43.188 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:43.191 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:43.192 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:43.196 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:43.198 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:43.199 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:43.200 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:43.201 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:43.201 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:43.213 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:43.273 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:43.277 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:43.277 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:43.278 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:43.281 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 07:48:43.298 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.322 seconds (process running for 4.163)
2025-08-04 07:48:43.309 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:43.312 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:43.314 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:43.315 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:43.315 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:43.316 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:43.317 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:43.319 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 808422f4 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 07:48:43.319 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 07:48:43.319 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:48:43.319 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:43.319 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:43.321 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:43.321 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:43.321 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:48:43.322 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:48:43.322 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:48:43.322 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:48:43.322 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:48:43.322 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:48:43.322 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:48:43.323 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:48:43.323 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:48:43.323 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:48:43.323 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:48:43.324 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:48:43.324 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:48:43.325 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:48:43.326 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:48:43.326 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 07:48:43.326 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 808422f4 - Procesamiento completado en 7ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 07:48:43.334 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:43.334 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:43.334 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:43.335 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:43.335 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 07:48:43.353 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 07:48:43.355 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:43.372 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:43.372 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:43.372 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:43.483 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:43.491 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:43.540 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:43.541 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 07:48:43.544 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn22: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:43.544 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 07:48:43.544 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:43.771 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:43.772 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:43.772 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:43.773 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:43.787 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:43.796 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:43.800 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:43.806 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:43.815 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:44.801 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:44.910 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:45.109 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:45.258 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:45.260 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:45.263 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:45.268 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:45.269 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:45.314 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:45.315 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:45.599 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:45.718 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:45.727 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:45.727 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:45.729 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:45.738 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 11 ms
2025-08-04 07:48:45.772 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 2.417 seconds (process running for 6.637)
2025-08-04 07:48:45.783 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:45.786 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:45.790 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:45.792 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:45.793 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:45.794 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:45.796 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:45.802 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 7466c7c2 - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 07:48:45.802 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 07:48:45.807 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 07:48:45.818 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 07:48:45.880 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:45.885 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:45.894 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:45.895 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:45.901 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 07:48:46.078 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 07:48:46.719 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:46.784 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:46.784 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:46.785 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:46.919 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:46.929 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:46.963 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:46.963 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 07:48:46.964 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn32: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:46.965 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 07:48:46.965 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:46.981 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:46.982 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:46.982 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:46.982 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:46.983 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:46.984 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:46.984 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:46.985 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:46.986 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:47.006 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:47.012 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.013 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:47.014 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.015 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:47.016 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:47.017 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.017 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:47.018 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.018 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:47.033 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:47.082 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:47.086 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:47.086 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:47.087 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:47.090 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 07:48:47.108 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.394 seconds (process running for 7.973)
2025-08-04 07:48:47.113 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:47.115 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:47.117 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:47.117 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:47.117 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:47.118 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:47.118 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.121 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 90fb858a - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 07:48:47.121 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 90fb858a - Archivo vacío recibido
2025-08-04 07:48:47.121 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 07:48:47.130 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:47.130 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:47.130 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:47.131 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:47.131 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 07:48:47.141 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 07:48:47.142 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:47.154 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:47.154 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:47.154 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:47.258 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:47.263 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:47.295 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:47.296 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 07:48:47.298 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn35: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:47.298 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 07:48:47.298 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:47.312 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:47.312 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:47.312 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:47.313 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:47.313 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:47.314 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:47.314 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:47.316 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:47.317 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:47.341 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:47.345 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.345 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:47.346 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.347 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:47.348 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:47.349 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.349 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:47.350 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.351 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:47.361 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:47.406 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:47.409 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:47.409 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:47.410 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:47.413 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 07:48:47.430 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.288 seconds (process running for 8.295)
2025-08-04 07:48:47.434 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:47.440 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:47.442 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:47.442 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:47.442 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:47.442 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:47.443 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.445 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: dd193e61 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 07:48:47.446 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 07:48:47.446 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 07:48:47.446 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:47.446 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:47.448 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:47.449 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:47.449 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:48:47.449 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.450 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:48:47.450 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:48:47.450 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:48:47.450 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 07:48:47.450 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:48:47.450 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 07:48:47.450 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.451 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:48:47.451 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:48:47.451 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:48:47.452 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 07:48:47.452 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: dd193e61 - Procesamiento completado en 6ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 07:48:47.452 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: dd193e61 - Errores de validación encontrados: 4 errores totales
2025-08-04 07:48:47.462 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:47.462 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:47.463 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:47.463 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:47.464 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 07:48:47.474 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 07:48:47.476 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:47.492 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:47.492 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:47.492 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:47.580 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:47.585 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:47.617 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:47.617 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 07:48:47.618 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn38: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:47.618 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 07:48:47.618 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:47.631 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:47.631 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:47.631 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:47.632 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:47.632 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:47.633 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:47.633 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:47.634 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:47.635 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:47.649 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:47.653 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.654 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:47.655 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:47.656 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:47.657 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:47.659 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.660 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:47.661 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.661 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:47.670 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:47.722 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:47.731 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:47.731 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:47.732 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:47.736 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 07:48:47.774 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.298 seconds (process running for 8.64)
2025-08-04 07:48:47.778 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:47.780 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:47.782 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:47.783 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:47.783 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:47.784 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:47.785 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:47.787 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 77756d3c - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 07:48:47.787 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 77756d3c - Formato de archivo inválido: pedidos.txt
2025-08-04 07:48:47.787 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 07:48:47.798 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:47.798 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:47.799 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:47.799 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:47.800 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 07:48:47.822 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 07:48:47.824 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 07:48:47.842 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 97497 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 07:48:47.842 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 07:48:47.842 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 07:48:47.933 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 07:48:47.938 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 07:48:47.967 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 07:48:47.967 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 07:48:47.968 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn42: url=jdbc:h2:mem:testdb user=SA
2025-08-04 07:48:47.968 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 07:48:47.968 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 07:48:47.981 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:47.981 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:47.981 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:47.981 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 07:48:47.982 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 07:48:47.983 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 07:48:47.983 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 07:48:47.984 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 07:48:47.985 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:48.006 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 07:48:48.018 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:48.019 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:48.025 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:48.030 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 07:48:48.032 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 07:48:48.033 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:48.034 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:48.035 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:48.035 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 07:48:48.045 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 07:48:48.091 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 07:48:48.094 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 07:48:48.095 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 07:48:48.096 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 07:48:48.098 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-08-04 07:48:48.112 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.288 seconds (process running for 8.977)
2025-08-04 07:48:48.117 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 07:48:48.119 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 07:48:48.120 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:48.120 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 07:48:48.121 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:48.121 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 07:48:48.121 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:48.125 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 773a2f2f - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 07:48:48.125 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 07:48:48.125 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:48:48.125 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:48.125 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:48.127 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:48.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:48.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:48:48.130 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 07:48:48.130 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:48:48.130 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:48:48.130 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:48:48.130 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:48:48.130 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:48:48.131 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:48:48.131 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:48:48.131 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:48:48.131 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:48:48.131 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:48:48.131 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:48:48.131 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:48:48.133 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(*) from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 07:48:48.133 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:48:48.133 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 07:48:48.133 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 07:48:48.134 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 07:48:48.134 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:48:48.134 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:48:48.134 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:48:48.134 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:48:48.134 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 07:48:48.135 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 07:48:48.135 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 07:48:48.135 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:48:48.135 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:48:48.135 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:48:48.136 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 07:48:48.137 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:48:48.137 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 07:48:48.137 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 773a2f2f - Procesamiento completado en 12ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 07:48:48.137 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 773a2f2f - Errores de validación encontrados: 4 errores totales
2025-08-04 07:48:48.408 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 07:48:48.408 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 07:48:48.408 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 07:48:48.408 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 07:48:48.409 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 07:48:48.410 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 07:48:48.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 07:48:48.412 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 07:48:48.412 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 07:48:48.412 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 07:48:48.412 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 07:48:48.412 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 07:48:48.412 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 07:48:48.413 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 07:48:48.413 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 07:48:48.413 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 07:48:48.413 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 07:48:48.413 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 07:48:48.414 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 07:48:48.414 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 07:48:48.414 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 07:48:48.414 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 07:48:48.414 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 07:48:48.414 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 07:48:48.414 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 07:48:48.415 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 07:48:48.415 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 07:48:48.427 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:48.427 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:48.428 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:48.429 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:48.430 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 07:48:48.431 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 07:48:48.434 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 07:48:48.434 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 07:48:48.434 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 07:48:48.434 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 07:48:48.435 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 07:48:48.436 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 08:01:51.562 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Starting PedidosMsApplicationTests using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:51.563 [main] DEBUG [] [] c.j.p.PedidosMsApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:51.563 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - The following 1 profile is active: "test"
2025-08-04 08:01:52.044 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:52.077 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:52.488 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:52.503 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 08:01:52.598 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:52.599 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 08:01:52.613 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:53.055 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:53.058 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:53.058 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:53.061 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:53.064 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:53.065 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:53.065 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:53.071 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:53.074 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:53.198 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:01:53.862 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:53.906 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:53.924 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:53.927 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:53.928 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:53.929 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:53.931 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:53.932 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:53.933 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:53.934 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:53.995 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:54.456 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:54.468 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:54.509 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Started PedidosMsApplicationTests in 3.162 seconds (process running for 3.79)
2025-08-04 08:01:55.309 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest]: PedidoControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:01:55.643 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest
2025-08-04 08:01:55.870 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:56.663 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:56.689 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:56.689 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 08:01:57.712 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:57.731 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:57.797 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:57.801 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 08:01:57.804 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:57.804 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 08:01:57.808 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:57.828 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:57.830 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:57.831 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:57.833 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:57.834 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:57.836 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:57.837 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:57.839 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:57.840 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:57.877 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:57.884 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:57.885 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:57.886 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:57.887 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:57.889 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:57.891 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:57.892 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:57.892 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:57.893 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:57.906 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:57.976 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:58.007 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:01:58.008 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:01:58.010 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:58.013 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:01:58.031 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 2.186 seconds (process running for 7.311)
2025-08-04 08:01:58.036 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.039 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 08:01:58.042 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.100 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: cd5df97a - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:01:58.101 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:01:58.107 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:01:58.108 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:01:58.108 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:01:58.122 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:01:58.125 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:01:58.125 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:01:58.127 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.128 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:01:58.128 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:01:58.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:01:58.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:01:58.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:01:58.129 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:01:58.130 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.132 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:01:58.132 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:01:58.132 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:01:58.133 [main] DEBUG [P001] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.134 [main] DEBUG [P001] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.134 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:01:58.134 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:01:58.134 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:01:58.136 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:01:58.140 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:01:58.142 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:01:58.142 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:01:58.142 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: cd5df97a - Procesamiento completado en 41ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:01:58.197 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:01:58.199 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 08:01:58.204 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:58.205 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:58.205 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:58.206 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:58.207 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 08:01:58.209 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 08:01:58.211 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:58.228 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:58.228 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:58.228 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:01:58.381 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:58.386 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:58.440 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:58.440 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 08:01:58.441 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:58.442 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 08:01:58.443 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:58.460 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:58.461 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:58.461 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:58.461 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:58.462 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:58.463 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:58.463 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:58.464 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:58.465 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:58.493 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:58.498 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.499 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:58.500 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.501 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:58.502 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:58.503 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.504 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:58.505 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.505 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:58.516 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:58.572 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:58.576 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:01:58.576 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:01:58.577 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:58.580 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 08:01:58.589 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.378 seconds (process running for 7.87)
2025-08-04 08:01:58.600 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:01:58.603 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:01:58.605 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:58.606 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:58.606 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:58.607 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:58.608 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.610 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 89202f7a - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:01:58.610 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:01:58.610 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:01:58.610 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:01:58.610 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:01:58.612 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:01:58.612 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:01:58.612 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:01:58.614 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:58.614 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:58.614 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.615 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:01:58.615 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:01:58.615 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:01:58.615 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:01:58.615 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:01:58.616 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:01:58.617 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.617 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:01:58.617 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:01:58.617 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:01:58.618 [main] DEBUG [P001] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.618 [main] DEBUG [P001] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.619 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:01:58.619 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:01:58.619 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:01:58.620 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:01:58.622 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:01:58.622 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:01:58.622 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 89202f7a - Procesamiento completado en 12ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:01:58.630 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:58.630 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:58.631 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:58.631 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:58.632 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 08:01:58.643 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 08:01:58.644 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:58.658 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:58.658 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:58.658 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:01:58.753 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:58.759 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:58.791 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:58.791 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 08:01:58.792 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn24: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:58.792 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 08:01:58.792 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:58.806 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:58.806 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:58.806 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:58.806 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:58.807 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:58.808 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:58.808 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:58.809 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:58.810 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:58.835 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:58.843 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.844 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:58.845 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:58.845 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:58.846 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:58.847 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.848 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:58.849 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.849 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:58.859 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:58.904 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:58.907 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:01:58.908 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:01:58.909 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:58.912 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 08:01:58.921 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.277 seconds (process running for 8.202)
2025-08-04 08:01:58.925 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:01:58.927 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:01:58.928 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:58.929 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:58.929 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:58.929 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:58.930 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:58.933 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 8c8796dd - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 08:01:58.933 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 08:01:58.939 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 08:01:58.944 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 08:01:58.960 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:58.960 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:58.961 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:58.961 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:58.962 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 08:01:58.965 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 08:01:58.967 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:58.995 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:58.996 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:58.996 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:01:59.123 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:59.128 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:59.158 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:59.158 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 08:01:59.159 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn27: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:59.159 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 08:01:59.159 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:59.172 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:59.172 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:59.172 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:59.173 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:59.173 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:59.174 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:59.174 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:59.175 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:59.176 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:59.199 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:59.204 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.204 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.205 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.206 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.207 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:59.209 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.210 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.211 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.211 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.221 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:59.270 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:59.274 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:01:59.274 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:01:59.275 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:59.277 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-08-04 08:01:59.286 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.319 seconds (process running for 8.567)
2025-08-04 08:01:59.290 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:01:59.292 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:01:59.294 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:59.294 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:59.295 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:59.295 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:59.296 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.298 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: d6a068d0 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 08:01:59.298 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: d6a068d0 - Archivo vacío recibido
2025-08-04 08:01:59.298 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 08:01:59.306 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:59.306 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:59.306 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:59.306 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:59.307 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 08:01:59.335 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 08:01:59.337 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:59.348 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:59.348 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:59.348 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:01:59.439 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:59.445 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:59.478 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:59.479 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 08:01:59.479 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:59.479 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 08:01:59.480 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:59.492 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:59.493 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:59.493 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:59.493 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:59.494 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:59.495 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:59.495 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:59.496 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:59.497 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:59.527 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:59.531 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.532 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.533 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.533 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.534 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:59.536 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.536 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.537 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.537 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.548 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:59.600 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:59.603 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:01:59.603 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:01:59.604 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:59.607 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-08-04 08:01:59.622 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.285 seconds (process running for 8.903)
2025-08-04 08:01:59.627 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:01:59.628 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:01:59.630 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:59.630 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:59.630 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:59.631 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:59.631 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.633 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 362b1116 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 08:01:59.634 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 08:01:59.634 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:01:59.634 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:01:59.634 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:01:59.635 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:01:59.636 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:01:59.636 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:01:59.637 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.638 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.638 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.639 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:01:59.639 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:01:59.639 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:01:59.639 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 08:01:59.639 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:01:59.639 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 08:01:59.640 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.641 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:01:59.641 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:01:59.641 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:01:59.642 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 08:01:59.642 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 362b1116 - Procesamiento completado en 8ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 08:01:59.642 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 362b1116 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:01:59.648 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:59.649 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:59.649 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:59.650 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:59.650 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 08:01:59.655 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 08:01:59.657 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:59.671 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:59.671 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:59.671 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:01:59.754 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:01:59.763 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
2025-08-04 08:01:59.792 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:01:59.792 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 08:01:59.793 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn33: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:01:59.793 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 08:01:59.793 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:01:59.805 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:59.805 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:59.805 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:59.805 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:01:59.806 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:01:59.806 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:01:59.807 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:01:59.808 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:01:59.809 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:59.834 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:01:59.838 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.839 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.840 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:01:59.841 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:01:59.842 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:01:59.843 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.844 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.844 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.845 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:01:59.853 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:01:59.898 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:01:59.901 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:01:59.901 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:01:59.902 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:01:59.904 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-08-04 08:01:59.911 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.254 seconds (process running for 9.192)
2025-08-04 08:01:59.914 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:01:59.915 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:01:59.916 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:59.916 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:01:59.917 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:59.917 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:01:59.917 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:01:59.919 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 94fad8f0 - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 08:01:59.919 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 94fad8f0 - Formato de archivo inválido: pedidos.txt
2025-08-04 08:01:59.920 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 08:01:59.926 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:01:59.927 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:01:59.927 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:01:59.927 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:01:59.928 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 08:01:59.931 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 08:01:59.932 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:01:59.944 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:01:59.944 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:01:59.944 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:02:00.029 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:02:00.036 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 3 JPA repository interfaces.
2025-08-04 08:02:00.078 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:02:00.078 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 08:02:00.079 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn35: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:02:00.079 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 08:02:00.079 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:02:00.092 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:02:00.093 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:02:00.093 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:02:00.093 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:02:00.094 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:02:00.094 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:02:00.095 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:02:00.096 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:02:00.097 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:02:00.116 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:02:00.121 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.121 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:00.122 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.123 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:00.124 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:02:00.126 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.126 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:00.127 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.127 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:00.136 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:02:00.178 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:02:00.181 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:02:00.181 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:02:00.182 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:02:00.184 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-08-04 08:02:00.191 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.259 seconds (process running for 9.472)
2025-08-04 08:02:00.195 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:02:00.196 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:02:00.197 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:02:00.198 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:02:00.198 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:02:00.198 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:02:00.198 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.200 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 53477409 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 08:02:00.200 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 08:02:00.200 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:02:00.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:02:00.201 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:02:00.202 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:02:00.202 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:02:00.202 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:02:00.204 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:00.204 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:00.205 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.205 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:02:00.205 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:02:00.206 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:02:00.206 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:02:00.206 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:02:00.206 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:02:00.207 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.208 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:02:00.208 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:02:00.208 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:02:00.208 [main] DEBUG [P001] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.209 [main] DEBUG [P001] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.209 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:02:00.209 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:02:00.209 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:02:00.209 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:02:00.210 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:02:00.210 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:02:00.210 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:02:00.210 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.210 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:02:00.211 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:02:00.211 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:02:00.211 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:02:00.211 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:02:00.211 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 08:02:00.211 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.212 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:02:00.212 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:02:00.212 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:02:00.212 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:02:00.213 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:00.214 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:02:00.214 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:02:00.214 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 53477409 - Procesamiento completado en 14ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 08:02:00.214 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 53477409 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:02:00.497 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 08:02:00.497 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:02:00.497 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:02:00.497 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:02:00.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:02:00.500 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:02:00.500 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:02:00.500 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:02:00.500 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:02:00.500 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:02:00.500 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:02:00.501 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:02:00.501 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 08:02:00.501 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 08:02:00.501 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:02:00.501 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:02:00.501 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:02:00.501 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:02:00.501 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 08:02:00.502 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 08:02:00.502 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:02:00.502 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:02:00.502 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:02:00.503 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:02:00.503 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:02:00.517 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest]: RepositoryJpqlTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:02:00.656 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest
2025-08-04 08:02:00.679 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:02:00.711 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 2148 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:02:00.711 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:02:00.711 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 08:02:00.792 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:02:00.803 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 3 JPA repository interfaces.
2025-08-04 08:02:00.813 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 08:02:00.830 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:ccf1fc6c-1ed9-4a79-ab09-6ffa854d11f7;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 08:02:00.855 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:02:00.857 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:02:00.879 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:02:00.879 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:02:00.880 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:02:00.880 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(255) not null, nombre varchar(255), primary key (id))
2025-08-04 08:02:00.882 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date, requiere_refrigeracion boolean not null, cliente_id varchar(255) not null, numero_pedido varchar(255) not null, zona_entrega varchar(255) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE'), primary key (numero_pedido))
2025-08-04 08:02:00.883 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(255) not null, primary key (id))
2025-08-04 08:02:00.884 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:02:00.885 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:02:00.887 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:02:00.964 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 0.286 seconds (process running for 10.245)
2025-08-04 08:02:00.971 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.974 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:00.976 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.976 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:00.977 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:00.979 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:00.987 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:00.988 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:00.988 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:00.989 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:00.989 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:00.990 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:00.990 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:02:00.998 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.000 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.000 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.001 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.002 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.003 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.006 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.006 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.007 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.007 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.008 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.008 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.009 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.010 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.017 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.018 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.019 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.020 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.020 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.022 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.028 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.028 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.029 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.029 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.029 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.030 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.030 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:02:01.037 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.042 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.042 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.043 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.044 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.045 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.047 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.048 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.048 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.048 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.049 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.049 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.049 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:02:01.051 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:02:01.057 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.058 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.059 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.060 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.061 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.062 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.064 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.065 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.065 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.066 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.066 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.066 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.067 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.068 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.073 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.074 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.074 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.075 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.076 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.077 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.078 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.079 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.079 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.079 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.080 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.080 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.081 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.082 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.090 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.092 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.092 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.093 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.098 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.098 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.098 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.099 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.099 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.100 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.101 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:02:01.106 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.108 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.108 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.109 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.110 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.111 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.114 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.114 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.115 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.115 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.116 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.116 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.117 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.118 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.123 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.125 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.125 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.127 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.128 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.128 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.131 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.131 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.131 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.131 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.132 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.132 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.133 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:02:01.140 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.143 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.144 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.145 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.146 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.147 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.149 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.150 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.150 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.150 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.151 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.151 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.152 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:02:01.153 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:02:01.159 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.161 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.161 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.163 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.164 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.165 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.166 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.169 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.169 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.169 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.170 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.170 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.170 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.171 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.172 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:02:01.177 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.179 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.181 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.182 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.182 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.183 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.189 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.195 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.196 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.196 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.196 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.200 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.200 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:02:01.203 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:02:01.218 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.220 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:02:01.221 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.222 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:02:01.223 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.224 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:02:01.229 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.229 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:02:01.230 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.230 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:02:01.231 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.231 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:02:01.231 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:02:01.241 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:02:01.241 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:02:01.241 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:02:01.242 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:02:01.243 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 08:02:01.244 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 08:02:01.246 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:02:01.246 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:02:01.247 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:02:01.247 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:02:01.248 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 08:02:01.249 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 08:02:01.250 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:02:01.250 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:02:01.251 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:02:01.251 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:42.161 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:42.163 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:42.163 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 08:12:42.641 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:42.676 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:43.128 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:43.144 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 08:12:43.246 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:43.247 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 08:12:43.262 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:43.683 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:43.685 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:43.685 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:43.688 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:43.693 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:43.694 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:43.695 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:43.695 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:43.696 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:43.696 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:43.697 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:43.697 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:43.698 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:43.698 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:43.699 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:43.700 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:43.701 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:43.702 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:43.702 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:43.710 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:43.713 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:43.849 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:12:44.401 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:44.448 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:44.462 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:44.468 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:44.469 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:44.470 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:44.472 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:44.473 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:44.474 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:44.475 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:44.563 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:44.835 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:44.855 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:44.856 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:44.860 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:44.869 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 13 ms
2025-08-04 08:12:44.910 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 2.968 seconds (process running for 3.634)
2025-08-04 08:12:45.193 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:45.196 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 08:12:45.199 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:45.231 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 2edb5202 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:12:45.232 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:12:45.238 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:12:45.238 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:12:45.238 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:12:45.251 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:45.254 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:12:45.254 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:12:45.268 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:45.269 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:12:45.270 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:12:45.271 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:12:45.271 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:12:45.271 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:12:45.271 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:12:45.272 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:45.273 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:12:45.273 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:12:45.273 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:12:45.274 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:12:45.274 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:12:45.274 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:12:45.276 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:45.279 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:45.281 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:12:45.281 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:12:45.281 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 2edb5202 - Procesamiento completado en 49ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:12:45.333 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:12:45.335 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 08:12:45.340 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:45.340 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:45.341 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:45.342 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:45.344 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 08:12:45.345 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 08:12:45.347 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:45.363 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:45.363 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:45.363 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:12:45.476 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:45.482 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:45.535 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:45.535 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 08:12:45.536 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:45.536 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 08:12:45.543 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:45.562 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:45.563 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:45.563 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:45.563 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:45.564 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:45.565 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:45.565 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:45.565 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:45.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:45.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:45.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:45.567 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:45.567 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:45.567 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:45.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:45.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:45.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:45.569 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:45.569 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:45.570 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:45.571 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:45.616 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:45.624 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:45.625 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:45.626 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:45.626 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:45.628 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:45.629 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:45.630 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:45.631 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:45.632 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:45.661 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:45.761 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:45.767 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:45.768 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:45.769 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:45.775 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 08:12:45.785 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.439 seconds (process running for 4.51)
2025-08-04 08:12:45.796 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:12:45.799 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:12:45.801 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:45.803 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:45.803 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:45.803 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:45.804 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:45.806 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 518e7c5c - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:12:45.807 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:12:45.809 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:12:45.809 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:12:45.809 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:12:45.811 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:45.812 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:12:45.812 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:12:45.813 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:45.814 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:45.814 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:45.815 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:12:45.815 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:12:45.815 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:12:45.815 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:12:45.815 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:12:45.815 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:12:45.817 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:45.817 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:12:45.817 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:12:45.817 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:12:45.818 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:12:45.818 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:12:45.818 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:12:45.819 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:45.820 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:12:45.821 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:12:45.821 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 518e7c5c - Procesamiento completado en 14ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:12:45.831 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:45.831 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:45.832 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:45.832 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:45.833 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 08:12:45.846 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 08:12:45.848 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:45.862 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:45.862 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:45.862 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:12:45.966 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:45.975 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:46.012 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:46.012 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 08:12:46.013 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:46.013 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 08:12:46.014 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:46.028 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:46.028 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:46.028 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:46.028 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:46.029 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:46.030 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:46.030 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:46.030 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:46.031 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:46.031 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:46.031 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:46.031 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:46.032 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:46.032 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:46.032 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:46.033 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:46.033 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:46.033 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:46.034 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:46.035 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:46.036 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:46.071 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:46.078 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.078 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.079 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.080 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.081 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:46.082 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.083 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.084 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.085 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.104 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:46.178 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:46.183 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:46.184 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:46.185 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:46.191 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 08:12:46.200 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.353 seconds (process running for 4.924)
2025-08-04 08:12:46.203 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:12:46.204 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:12:46.205 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:46.206 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:46.206 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:46.206 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:46.207 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.209 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 1e70feb3 - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 08:12:46.209 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 08:12:46.215 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 08:12:46.220 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 08:12:46.232 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:46.233 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:46.233 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:46.234 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:46.235 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 08:12:46.250 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 08:12:46.258 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:46.281 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:46.281 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:46.281 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:12:46.373 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:46.378 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:46.417 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:46.417 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 08:12:46.418 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn22: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:46.418 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 08:12:46.418 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:46.432 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:46.432 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:46.432 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:46.432 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:46.433 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:46.434 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:46.435 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:46.435 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:46.435 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:46.435 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:46.436 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:46.436 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:46.436 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:46.436 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:46.437 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:46.437 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:46.437 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:46.437 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:46.438 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:46.438 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:46.439 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:46.470 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:46.476 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.477 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.478 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.478 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.480 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:46.481 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.481 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.482 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.483 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.497 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:46.561 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:46.566 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:46.566 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:46.567 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:46.571 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:12:46.579 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.322 seconds (process running for 5.303)
2025-08-04 08:12:46.582 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:12:46.584 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:12:46.585 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:46.585 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:46.586 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:46.586 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:46.587 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.590 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 65a1ad2c - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 08:12:46.590 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 65a1ad2c - Archivo vacío recibido
2025-08-04 08:12:46.590 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 08:12:46.597 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:46.598 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:46.598 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:46.599 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:46.599 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 08:12:46.623 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 08:12:46.624 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:46.639 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:46.639 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:46.639 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:12:46.736 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:46.740 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:46.777 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:46.777 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 08:12:46.778 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn26: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:46.778 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 08:12:46.778 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:46.791 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:46.792 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:46.792 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:46.792 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:46.792 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:46.793 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:46.793 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:46.793 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:46.794 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:46.794 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:46.794 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:46.794 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:46.795 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:46.795 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:46.795 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:46.795 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:46.796 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:46.796 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:46.796 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:46.797 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:46.798 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:46.830 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:46.835 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.836 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.836 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.837 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.838 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:46.840 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.840 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.841 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.842 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.857 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:46.924 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:46.930 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:46.930 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:46.931 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:46.935 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:12:46.943 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.319 seconds (process running for 5.667)
2025-08-04 08:12:46.946 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:12:46.948 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:12:46.949 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:46.950 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:46.950 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:46.950 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:46.951 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.954 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 3e099d01 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 08:12:46.954 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 08:12:46.954 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:12:46.954 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:12:46.954 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:12:46.955 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:46.956 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:12:46.956 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:12:46.958 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:46.958 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:46.958 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:46.959 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:12:46.959 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:12:46.959 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:12:46.959 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 08:12:46.959 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:12:46.959 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 08:12:46.961 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:46.962 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:12:46.962 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:12:46.962 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:12:46.962 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 08:12:46.962 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 3e099d01 - Procesamiento completado en 8ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 08:12:46.963 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 3e099d01 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:12:46.969 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:46.969 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:46.970 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:46.970 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:46.971 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 08:12:46.983 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 08:12:46.984 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:46.997 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:46.997 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:46.997 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:12:47.094 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:47.099 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:47.137 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:47.137 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 08:12:47.138 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:47.138 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 08:12:47.139 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:47.152 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:47.153 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:47.153 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:47.153 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:47.154 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:47.155 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:47.155 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:47.155 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:47.155 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:47.156 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:47.156 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:47.156 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:47.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:47.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:47.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:47.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:47.158 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:47.158 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:47.158 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:47.159 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:47.160 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:47.343 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:47.351 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:47.353 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:47.354 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:47.354 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:47.356 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:47.357 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.358 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:47.358 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.359 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:47.372 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:47.433 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:47.441 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:47.441 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:47.442 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:47.447 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:12:47.458 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.474 seconds (process running for 6.182)
2025-08-04 08:12:47.461 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:12:47.462 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:12:47.463 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:47.464 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:47.464 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:47.464 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:47.465 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.470 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: ffb1902d - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 08:12:47.470 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: ffb1902d - Formato de archivo inválido: pedidos.txt
2025-08-04 08:12:47.471 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 08:12:47.477 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:47.477 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:47.478 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:47.478 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:47.479 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 08:12:47.514 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 08:12:47.515 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:47.532 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:47.532 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:47.532 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:12:47.641 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:47.645 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:47.691 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:47.691 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 08:12:47.693 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn39: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:12:47.693 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 08:12:47.693 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:47.706 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:47.707 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:47.707 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:47.707 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:47.707 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:47.708 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:47.708 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:47.708 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:47.709 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:47.709 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:47.709 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:47.710 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:47.710 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:47.710 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:47.710 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:47.711 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:47.711 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:47.711 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:47.711 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:47.712 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:47.713 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:47.741 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:12:47.747 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:47.747 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:47.748 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:47.748 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:47.750 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:12:47.751 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.752 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:47.752 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.753 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:47.767 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:12:47.829 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:12:47.834 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:12:47.834 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:12:47.835 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:12:47.839 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:12:47.856 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.341 seconds (process running for 6.58)
2025-08-04 08:12:47.859 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:12:47.860 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:12:47.861 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:47.862 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:12:47.862 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:47.862 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:12:47.863 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.864 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: dfc86916 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 08:12:47.865 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 08:12:47.865 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:12:47.865 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:12:47.865 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:12:47.866 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:47.867 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:12:47.867 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:12:47.868 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:47.868 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:47.869 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:47.869 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:12:47.869 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:12:47.869 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:12:47.869 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:12:47.870 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:12:47.870 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:12:47.871 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.872 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:12:47.872 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:12:47.872 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:12:47.872 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:12:47.872 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:12:47.872 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:12:47.872 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:12:47.873 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:47.873 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:12:47.873 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:12:47.874 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:47.874 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:12:47.874 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:12:47.874 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:12:47.874 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:12:47.874 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:12:47.874 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 08:12:47.875 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:47.875 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:12:47.875 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:12:47.875 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:12:47.875 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:12:47.876 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:47.878 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:12:47.878 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:12:47.878 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: dfc86916 - Procesamiento completado en 13ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 08:12:47.878 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: dfc86916 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:12:48.197 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 08:12:48.197 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:12:48.197 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:12:48.197 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:12:48.199 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:12:48.199 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:12:48.199 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 08:12:48.199 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:12:48.199 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:12:48.199 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:12:48.200 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:12:48.200 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:12:48.200 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:12:48.200 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:12:48.200 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:12:48.201 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:12:48.201 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:12:48.201 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:12:48.201 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:12:48.201 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:12:48.201 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 08:12:48.201 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 08:12:48.201 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:12:48.201 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:12:48.201 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:12:48.201 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:12:48.202 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 08:12:48.202 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 08:12:48.202 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:12:48.202 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:12:48.202 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:12:48.203 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:12:48.204 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:12:48.225 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest]: RepositoryJpqlTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:12:48.257 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest
2025-08-04 08:12:48.261 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:12:48.294 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 7282 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:12:48.294 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:12:48.295 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 08:12:48.376 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:12:48.387 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 3 JPA repository interfaces.
2025-08-04 08:12:48.400 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 08:12:48.415 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:b50eccde-f75a-4f01-bf51-7411afef5734;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 08:12:48.441 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:12:48.442 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:12:48.465 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:48.466 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:48.466 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:48.466 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:12:48.467 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:12:48.469 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:12:48.469 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:12:48.470 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:12:48.470 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:12:48.471 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:12:48.472 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:12:48.472 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:12:48.472 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:12:48.473 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:12:48.473 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:12:48.474 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:12:48.475 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:12:48.475 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:12:48.476 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:12:48.477 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:12:48.478 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:48.550 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 0.29 seconds (process running for 7.275)
2025-08-04 08:12:48.557 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.560 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.562 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.563 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.564 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.565 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.574 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.575 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.575 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.576 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.576 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.577 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.577 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:12:48.584 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.587 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.590 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.592 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.594 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.595 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.599 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.600 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.601 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.602 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.603 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.604 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.605 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.607 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.615 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.617 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.618 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.620 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.622 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.625 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.634 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.634 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.635 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.636 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.638 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.639 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.640 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:12:48.646 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.648 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.649 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.649 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.650 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.651 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.655 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.655 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.656 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.656 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.657 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.658 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.659 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:48.660 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:48.668 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.669 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.670 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.671 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.672 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.673 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.675 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.676 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.677 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.677 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.682 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.683 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.684 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.687 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.700 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.702 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.703 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.707 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.712 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.712 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.712 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.713 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.713 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.713 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.714 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.715 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.722 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.724 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.726 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.727 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.728 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.729 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.741 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.741 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.741 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.742 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.743 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.743 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.744 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:12:48.757 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.758 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.762 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.764 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.766 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.770 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.776 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.776 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.776 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.777 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.777 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.778 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.779 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.784 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.798 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.801 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.804 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.806 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.807 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.809 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.813 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.814 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.814 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.815 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.815 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.816 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.816 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:12:48.821 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.823 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.823 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.824 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.825 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.826 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.828 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.829 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.829 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.829 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.830 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.830 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.830 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:12:48.831 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:12:48.836 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.847 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.847 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.848 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.848 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.849 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.850 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.852 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.853 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.853 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.853 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.854 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.854 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.854 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.854 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:12:48.860 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.861 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.862 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.866 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.867 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.868 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.870 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.871 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.871 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.871 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.872 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.872 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.872 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:48.875 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:12:48.879 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.880 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:12:48.880 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.881 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:12:48.881 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.882 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:12:48.887 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.888 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:12:48.888 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.889 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:12:48.889 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.889 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:12:48.890 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:12:48.907 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:48.907 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:48.908 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:48.909 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:12:48.910 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 08:12:48.911 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 08:12:48.912 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:12:48.912 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:12:48.912 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:12:48.913 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:13:57.175 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 7749 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:13:57.176 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:13:57.177 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 08:13:57.358 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:13:57.392 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 3 JPA repository interfaces.
2025-08-04 08:13:57.422 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 08:13:57.469 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:6cf56f79-5d1d-48e2-a924-8f531c696a3c;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 08:13:57.748 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:13:57.771 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:13:58.175 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:13:58.177 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:13:58.177 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:13:58.179 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:13:58.183 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:13:58.184 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:13:58.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:13:58.186 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:13:58.186 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:13:58.187 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:13:58.187 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:13:58.188 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:13:58.188 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:13:58.189 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:13:58.189 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:13:58.190 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:13:58.191 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:13:58.192 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:13:58.192 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:13:58.198 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:13:58.201 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:13:58.330 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:13:58.856 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 1.895 seconds (process running for 2.43)
2025-08-04 08:13:59.127 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.150 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.152 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.153 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.155 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.158 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.184 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.186 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.187 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.187 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.188 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.189 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.191 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:13:59.204 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.205 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.206 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.206 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.207 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.208 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.213 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.214 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.214 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.214 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.215 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.215 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.216 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.217 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.223 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.224 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.225 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.226 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.227 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.229 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.232 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.233 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.234 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.234 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.235 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.236 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.236 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:13:59.243 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.244 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.245 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.245 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.246 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.247 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.251 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.251 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.252 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.253 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.253 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.254 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.255 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:13:59.257 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:13:59.264 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.266 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.266 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.267 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.267 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.268 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.270 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.271 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.271 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.272 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.272 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.272 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.273 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.274 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.282 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.283 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.284 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.285 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.285 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.286 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.289 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.290 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.290 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.290 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.291 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.291 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.292 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.293 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.297 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.298 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.299 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.299 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.300 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.300 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.303 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.303 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.303 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.303 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.304 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.308 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.309 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:13:59.314 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.315 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.316 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.317 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.317 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.318 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.322 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.322 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.323 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.323 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.323 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.324 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.324 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.326 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.330 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.331 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.333 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.334 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.334 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.335 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.337 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.337 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.337 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.337 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.338 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.338 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.339 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:13:59.343 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.346 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.347 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.347 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.348 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.348 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.350 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.351 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.351 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.351 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.351 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.351 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.352 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:13:59.354 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:13:59.363 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.364 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.365 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.366 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.366 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.367 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.368 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.370 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.371 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.371 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.371 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.372 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.372 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.372 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.373 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:13:59.378 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.379 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.380 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.380 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.381 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.382 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.385 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.386 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.387 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.388 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.388 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.389 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.390 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:13:59.393 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:13:59.402 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.403 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:13:59.403 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.404 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:13:59.404 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.405 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:13:59.408 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.409 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:13:59.409 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.409 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:13:59.410 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.410 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:13:59.410 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:13:59.421 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:13:59.422 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:13:59.423 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:13:59.424 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:51.510 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:51.511 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:51.512 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 08:14:52.015 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:52.050 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:52.508 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:52.521 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 08:14:52.613 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:52.614 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 08:14:52.627 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:53.061 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:53.064 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:53.064 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:53.072 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:53.076 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:53.077 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:53.078 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:53.078 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:53.078 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:53.079 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:53.079 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:53.080 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:53.080 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:53.080 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:53.081 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:53.081 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:53.083 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:53.083 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:53.084 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:53.091 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:53.093 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:53.231 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:14:53.840 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:53.890 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:53.906 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:53.909 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:53.910 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:53.912 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:53.913 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:53.914 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:53.915 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:53.916 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:54.012 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:54.321 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:54.350 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:54.350 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:54.356 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:54.368 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 18 ms
2025-08-04 08:14:54.412 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 3.109 seconds (process running for 3.81)
2025-08-04 08:14:54.710 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:54.714 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 08:14:54.717 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:54.754 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: e844856c - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:14:54.754 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:14:54.761 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:14:54.761 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:14:54.761 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:14:54.773 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:54.775 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:14:54.776 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:14:54.791 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:54.793 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:14:54.793 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:14:54.795 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:14:54.795 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:14:54.795 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:14:54.795 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:14:54.797 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:54.798 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:14:54.798 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:14:54.798 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:14:54.799 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:14:54.799 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:14:54.799 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:14:54.800 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:54.803 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:54.804 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:14:54.804 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:14:54.805 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: e844856c - Procesamiento completado en 50ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:14:54.864 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:14:54.866 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 08:14:54.870 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:54.870 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:54.871 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:54.872 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:54.874 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 08:14:54.875 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 08:14:54.877 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:54.894 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:54.894 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:54.894 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:14:55.043 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:55.050 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:55.101 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:55.101 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 08:14:55.102 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:55.102 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 08:14:55.103 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:55.117 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:55.118 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:55.118 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:55.118 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:55.119 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:55.120 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:55.121 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:55.121 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:55.121 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:55.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:55.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:55.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:55.123 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:55.123 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:55.123 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:55.124 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:55.124 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:55.125 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:55.125 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:55.126 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:55.127 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:55.172 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:55.181 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.182 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:55.183 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.183 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:55.184 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:55.186 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.187 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:55.188 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.189 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:55.215 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:55.302 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:55.308 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:55.308 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:55.310 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:55.316 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 8 ms
2025-08-04 08:14:55.326 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.449 seconds (process running for 4.724)
2025-08-04 08:14:55.336 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:14:55.339 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:14:55.341 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:55.342 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:55.342 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:55.342 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:55.343 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.347 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: ab65571f - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:14:55.348 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:14:55.348 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:14:55.348 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:14:55.348 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:14:55.349 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:55.350 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:14:55.350 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:14:55.352 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:55.353 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:55.353 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.354 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:14:55.354 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:14:55.354 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:14:55.354 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:14:55.354 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:14:55.354 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:14:55.356 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.357 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:14:55.357 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:14:55.357 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:14:55.357 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:14:55.357 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:14:55.357 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:14:55.358 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:55.359 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:14:55.359 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:14:55.359 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: ab65571f - Procesamiento completado en 11ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:14:55.367 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:55.367 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:55.368 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:55.369 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:55.369 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 08:14:55.385 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 08:14:55.387 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:55.404 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:55.404 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:55.405 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:14:55.502 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:55.509 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:55.545 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:55.546 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 08:14:55.546 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:55.546 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 08:14:55.547 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:55.560 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:55.561 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:55.561 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:55.561 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:55.562 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:55.562 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:55.563 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:55.563 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:55.563 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:55.564 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:55.564 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:55.564 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:55.565 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:55.565 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:55.565 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:55.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:55.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:55.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:55.567 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:55.568 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:55.569 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:55.602 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:55.608 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.609 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:55.610 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.611 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:55.612 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:55.613 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.614 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:55.615 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.615 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:55.632 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:55.705 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:55.711 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:55.711 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:55.712 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:55.718 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 08:14:55.728 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.34 seconds (process running for 5.125)
2025-08-04 08:14:55.730 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:14:55.732 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:14:55.733 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:55.733 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:55.734 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:55.734 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:55.734 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:55.736 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: a9f3592b - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 08:14:55.737 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 08:14:55.743 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 08:14:55.747 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 08:14:55.766 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:55.766 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:55.767 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:55.768 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:55.769 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 08:14:55.781 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 08:14:55.783 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:55.799 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:55.799 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:55.799 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:14:55.892 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:55.897 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:55.937 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:55.937 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 08:14:55.938 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn21: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:55.938 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 08:14:55.938 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:55.951 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:55.951 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:55.951 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:55.952 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:55.953 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:55.954 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:55.954 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:55.954 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:55.955 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:55.955 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:55.955 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:55.956 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:55.956 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:55.956 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:55.956 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:55.956 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:55.956 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:55.957 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:55.957 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:55.959 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:55.960 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:55.992 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:55.997 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.998 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:55.999 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:55.999 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:56.000 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:56.002 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.002 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.003 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.004 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.018 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:56.086 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:56.092 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:56.093 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:56.094 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:56.099 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:14:56.108 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.325 seconds (process running for 5.506)
2025-08-04 08:14:56.112 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:14:56.113 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:14:56.114 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:56.115 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:56.115 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:56.115 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:56.116 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.118 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 1becf5d2 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 08:14:56.118 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 1becf5d2 - Archivo vacío recibido
2025-08-04 08:14:56.119 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 08:14:56.126 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:56.126 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:56.127 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:56.127 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:56.128 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 08:14:56.145 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 08:14:56.146 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:56.161 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:56.161 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:56.161 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:14:56.265 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:56.270 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:56.302 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:56.303 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 08:14:56.304 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn25: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:56.304 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 08:14:56.304 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:56.318 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:56.318 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:56.318 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:56.319 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:56.319 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:56.320 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:56.321 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:56.321 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:56.322 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:56.322 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:56.323 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:56.323 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:56.323 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:56.324 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:56.324 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:56.325 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:56.325 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:56.325 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:56.326 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:56.326 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:56.328 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:56.364 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:56.369 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:56.370 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:56.371 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:56.372 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:56.373 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:56.375 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.375 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.376 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.377 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.398 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:56.465 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:56.469 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:56.469 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:56.470 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:56.475 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:14:56.483 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.337 seconds (process running for 5.88)
2025-08-04 08:14:56.486 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:14:56.488 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:14:56.489 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:56.490 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:56.490 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:56.490 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:56.491 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.493 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 5b244d24 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 08:14:56.493 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 08:14:56.493 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:14:56.493 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:14:56.493 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:14:56.495 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:56.496 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:14:56.496 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:14:56.497 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:56.498 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.498 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:56.499 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:14:56.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:14:56.499 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:14:56.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 08:14:56.499 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:14:56.499 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 08:14:56.500 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.501 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:14:56.501 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:14:56.501 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:14:56.501 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 08:14:56.502 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 5b244d24 - Procesamiento completado en 8ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 08:14:56.502 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 5b244d24 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:14:56.509 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:56.509 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:56.510 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:56.510 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:56.511 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 08:14:56.543 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 08:14:56.545 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:56.557 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:56.557 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:56.557 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:14:56.650 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:56.656 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:56.694 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:56.695 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 08:14:56.697 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:56.697 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 08:14:56.697 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:56.712 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:56.712 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:56.712 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:56.712 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:56.713 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:56.714 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:56.714 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:56.714 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:56.714 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:56.715 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:56.715 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:56.715 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:56.716 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:56.716 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:56.716 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:56.716 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:56.717 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:56.717 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:56.717 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:56.718 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:56.719 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:56.750 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:56.756 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:56.756 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:56.757 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:56.757 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:56.759 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:56.760 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.761 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.762 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.762 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:56.776 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:56.845 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:56.855 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:56.855 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:56.857 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:56.861 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:14:56.870 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.325 seconds (process running for 6.268)
2025-08-04 08:14:56.873 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:14:56.875 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:14:56.876 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:56.876 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:56.877 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:56.877 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:56.877 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:56.879 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: f184f351 - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 08:14:56.879 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: f184f351 - Formato de archivo inválido: pedidos.txt
2025-08-04 08:14:56.880 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 08:14:56.887 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:56.887 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:56.888 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:56.888 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:56.889 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 08:14:56.911 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 08:14:56.917 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:57.016 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:57.016 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:57.017 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:14:57.150 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:57.156 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:57.192 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:57.193 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 08:14:57.194 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn34: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:57.194 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 08:14:57.195 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:57.211 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:57.211 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:57.212 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:57.212 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:57.213 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:57.213 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:57.213 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:57.214 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:57.214 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:57.214 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:57.214 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:57.215 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:57.215 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:57.215 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:57.215 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:57.215 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:57.216 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:57.216 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:57.216 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:57.217 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:57.218 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:57.251 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:57.258 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:57.259 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:57.259 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:57.260 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:57.261 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:57.262 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:57.263 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:57.264 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:57.264 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:57.277 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:57.338 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:57.343 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:14:57.343 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:14:57.344 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:57.348 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:14:57.357 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.441 seconds (process running for 6.755)
2025-08-04 08:14:57.360 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:14:57.362 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:14:57.363 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:57.363 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:14:57.364 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:57.364 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:14:57.364 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:57.366 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 3252abe6 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 08:14:57.366 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 08:14:57.366 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:14:57.366 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:14:57.366 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:14:57.368 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:57.368 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:14:57.368 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:14:57.370 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:57.370 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:57.370 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:57.371 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:14:57.371 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:14:57.371 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:14:57.371 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:14:57.371 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:14:57.371 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:14:57.373 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:57.374 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:14:57.374 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:14:57.374 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:14:57.374 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:14:57.374 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:14:57.374 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:14:57.374 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:14:57.375 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:57.375 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:14:57.375 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:14:57.376 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:57.376 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:14:57.376 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:14:57.376 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:14:57.376 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:14:57.376 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:14:57.376 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 08:14:57.377 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:57.378 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:14:57.378 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:14:57.378 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:14:57.378 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:14:57.379 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:57.380 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:14:57.380 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:14:57.380 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 3252abe6 - Procesamiento completado en 14ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 08:14:57.380 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 3252abe6 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:14:57.657 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 08:14:57.657 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:14:57.657 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:14:57.658 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:14:57.659 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:14:57.660 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:14:57.661 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:14:57.661 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:14:57.661 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:14:57.661 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:14:57.661 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:14:57.661 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:14:57.661 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:14:57.662 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:14:57.662 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 08:14:57.662 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 08:14:57.662 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:14:57.662 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:14:57.662 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:14:57.663 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:14:57.663 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 08:14:57.663 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 08:14:57.663 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:14:57.663 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:14:57.663 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:14:57.664 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:14:57.664 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:14:57.677 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest]: RepositoryJpqlTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:14:57.701 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest
2025-08-04 08:14:57.704 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:57.749 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:57.749 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:57.749 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 08:14:57.848 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:57.860 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:57.872 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 08:14:57.884 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:076b2a56-0372-4006-99d8-ba2cc437a742;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 08:14:57.912 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:57.913 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:57.932 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:57.933 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:57.933 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:57.934 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:57.935 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:57.936 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:57.937 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:57.937 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:57.938 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:57.938 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:57.939 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:57.940 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:57.940 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:57.941 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:57.941 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:57.941 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:57.942 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:57.942 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:57.943 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:57.944 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:57.945 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:58.006 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 0.302 seconds (process running for 7.404)
2025-08-04 08:14:58.017 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.025 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.027 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.027 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.029 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.030 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.038 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.039 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.039 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.040 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.040 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.041 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.041 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:14:58.049 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.051 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.054 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.056 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.056 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.059 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.063 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.063 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.064 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.065 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.065 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.066 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.066 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.068 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.073 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.074 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.075 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.076 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.076 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.077 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.082 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.083 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.083 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.083 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.084 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.084 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.085 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:14:58.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.094 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.094 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.095 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.096 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.098 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.099 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.099 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.100 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.100 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.101 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.101 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:58.102 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:58.106 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.107 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.108 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.108 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.109 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.110 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.112 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.112 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.113 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.113 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.113 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.114 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.114 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.117 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.122 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.124 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.125 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.125 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.126 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.127 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.129 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.129 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.129 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.130 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.130 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.131 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.131 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.132 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.136 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.137 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.138 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.139 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.139 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.140 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.143 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.144 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.144 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.144 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.144 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.145 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.145 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:14:58.154 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.155 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.157 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.160 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.161 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.164 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.167 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.167 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.168 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.168 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.168 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.169 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.170 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.171 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.179 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.181 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.181 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.182 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.183 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.183 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.187 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.187 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.188 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.188 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.189 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.193 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.193 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:14:58.198 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.199 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.200 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.200 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.201 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.202 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.204 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.204 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.205 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.205 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.205 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.206 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.206 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:14:58.207 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:14:58.212 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.214 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.215 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.216 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.226 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.227 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.228 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.232 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.233 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.233 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.233 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.233 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.235 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.236 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.236 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:14:58.245 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.247 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.247 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.248 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.249 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.250 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.253 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.253 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.254 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.254 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.254 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.255 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.255 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:58.258 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:58.262 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.263 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.264 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.264 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.265 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.265 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.268 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.269 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.269 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.269 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.269 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.270 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.270 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:14:58.276 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest]: CacheAndIndexPerformanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:14:58.282 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest
2025-08-04 08:14:58.284 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:14:58.303 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Starting CacheAndIndexPerformanceTest using Java 17.0.15 with PID 8072 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:14:58.303 [main] DEBUG [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:14:58.303 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - The following 1 profile is active: "test"
2025-08-04 08:14:58.465 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:14:58.472 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 3 JPA repository interfaces.
2025-08-04 08:14:58.545 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:14:58.546 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 08:14:58.546 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn61: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:14:58.546 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 08:14:58.547 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:14:58.563 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:58.564 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:58.564 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:58.565 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:14:58.565 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:14:58.566 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:14:58.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:14:58.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:14:58.566 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:14:58.567 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:14:58.567 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:14:58.567 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:14:58.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:14:58.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:14:58.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:14:58.568 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:14:58.569 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:14:58.569 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:14:58.570 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:14:58.571 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:14:58.572 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:58.635 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:14:58.644 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.645 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.646 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.647 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.648 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:14:58.650 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.650 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.651 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.652 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.683 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:14:58.838 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:14:58.848 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:14:58.879 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Started CacheAndIndexPerformanceTest in 0.595 seconds (process running for 8.277)
2025-08-04 08:14:58.886 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.888 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.890 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.892 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.896 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.897 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.898 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.899 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.936 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:14:58.943 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.944 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.946 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.953 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.961 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.961 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.962 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.963 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.964 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.964 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.965 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.966 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.966 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.966 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.967 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.968 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.968 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.969 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.969 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.970 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.970 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.971 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.971 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.972 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.972 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.973 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.974 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.975 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.975 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.976 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.977 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.979 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.979 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.980 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.980 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.981 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.981 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.981 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.982 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.982 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.983 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.983 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.984 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.984 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.984 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.985 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.986 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.987 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.988 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.988 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.989 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.989 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.990 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.990 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.991 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.992 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.993 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.994 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.994 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.995 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.995 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.995 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.996 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:58.997 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.997 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:58.998 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.998 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:58.998 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:58.999 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:58.999 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:58.999 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.000 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.000 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.001 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.001 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.002 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.002 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.003 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.003 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.020 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.032 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.057 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.060 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.080 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.081 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.081 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.082 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.082 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.083 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.083 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.083 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.084 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.084 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.084 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.084 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.085 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.096 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.121 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.123 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.124 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.126 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.127 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.127 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.128 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.129 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.130 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.130 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.131 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.132 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.132 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.133 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.150 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.151 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.153 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.154 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.154 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.155 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.155 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.156 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.156 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.157 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.157 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.157 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.158 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.158 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.158 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.159 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.159 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.160 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.160 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.161 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.161 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.161 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.162 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.162 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.163 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.163 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.164 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.164 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.165 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.165 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.165 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.166 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.166 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.167 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.167 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.168 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.168 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.168 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.168 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.169 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.170 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.170 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.170 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.171 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.171 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.172 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.172 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.172 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.173 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.173 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.174 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.174 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.175 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.175 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.175 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.176 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.178 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.178 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.179 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.179 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.180 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.180 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.181 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.181 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.182 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.182 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.183 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.184 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.184 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.185 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.185 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.186 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.187 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.187 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.188 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.188 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.189 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.189 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.190 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.190 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.191 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.191 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.191 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.192 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.193 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.194 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.194 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.195 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.196 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.197 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.197 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.197 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.198 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.198 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.198 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.199 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.199 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.200 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.200 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.201 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.201 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.201 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.202 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.202 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.203 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.203 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.204 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.204 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.205 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.205 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.206 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.206 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.207 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.207 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.208 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.208 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.209 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.209 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.209 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.210 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.210 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.211 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.211 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.212 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.212 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.212 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.212 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.213 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.214 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.214 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.215 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.215 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.215 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.215 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.216 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.216 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.217 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.217 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.218 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.220 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.220 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.221 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.221 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.222 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.222 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.223 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.223 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.224 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.224 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.225 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.225 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.225 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.226 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.226 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.227 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.227 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.227 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.228 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.228 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.228 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.229 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.229 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.230 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.230 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.231 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.231 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.231 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.231 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.232 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.232 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.233 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.233 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.233 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.234 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.234 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.234 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.235 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.235 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.236 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.236 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.236 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.236 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.237 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.237 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.238 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.238 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.239 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.239 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.239 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.240 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.240 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.240 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.241 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.241 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.242 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.242 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.243 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.243 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.243 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.244 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.244 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.245 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.245 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.245 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.246 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.246 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.246 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.247 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.247 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.248 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.248 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.249 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.249 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.249 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.249 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.250 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.251 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.251 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.252 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.252 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.253 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.253 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.253 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.254 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.255 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.255 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.256 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.256 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.257 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.257 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.257 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.258 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.258 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.258 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.259 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.259 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.259 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.260 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.260 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.260 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.261 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.261 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.261 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.262 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.262 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.262 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.263 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.263 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.264 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.264 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.264 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.265 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.265 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.265 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.266 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.266 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.267 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.267 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.267 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.268 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.268 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.268 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.268 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.269 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.269 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.270 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.270 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.271 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.271 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.271 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.272 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.272 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.273 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.273 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.274 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.274 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.274 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.275 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.275 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.275 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.276 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.276 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.276 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.277 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.277 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.277 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.277 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.278 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.278 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.278 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.279 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.279 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.280 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.280 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.280 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.280 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.281 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.281 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.282 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.282 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.283 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.283 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.283 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.284 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.284 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.285 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.286 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.286 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.287 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.287 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.288 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.288 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.289 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.289 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.290 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.290 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.290 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.290 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.291 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.291 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.292 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.292 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.292 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.293 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.293 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.293 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.294 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.294 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.295 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.295 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.296 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.296 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.297 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.297 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.299 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.300 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.302 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.302 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.303 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.303 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.303 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.304 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.304 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.304 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.307 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.308 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.309 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.309 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.310 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.310 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.310 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.311 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.312 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.312 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.312 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.313 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.313 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.314 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.314 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.314 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.314 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.315 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.315 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.315 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.315 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.316 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.316 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.316 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.317 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.318 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.319 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.320 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.320 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.320 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.321 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.321 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.322 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.322 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.326 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.327 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.328 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.328 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.328 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.329 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.330 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.330 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.330 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.330 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.331 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.331 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.331 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.332 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.332 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.332 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.333 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.333 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.333 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.334 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.334 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.334 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.335 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.335 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.335 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.335 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.336 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.336 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.336 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.337 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.337 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.337 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.338 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.338 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.338 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.339 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.339 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.339 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.340 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.340 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.341 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.341 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.341 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.342 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.342 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.342 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.343 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.343 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.343 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.344 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.345 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.345 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.345 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.346 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.346 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.347 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.347 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.347 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.348 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.348 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.348 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.348 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.349 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.349 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.350 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.350 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.351 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.351 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.351 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.352 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.353 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.353 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.354 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.355 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.355 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.355 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.356 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.356 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.357 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.357 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.357 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.358 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.358 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.358 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.359 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.359 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.360 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.360 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.360 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.360 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.361 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.361 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.361 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.361 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.362 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.362 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.362 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.363 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.363 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.363 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.364 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.364 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.364 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.365 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.365 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.366 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.366 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.366 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.366 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.367 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.368 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.368 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.369 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.369 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.369 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.370 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.370 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.370 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.371 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.371 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.372 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.372 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.372 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.372 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.373 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.373 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.374 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.374 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.374 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.374 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.375 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.375 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.375 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.376 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.376 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.377 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.377 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.377 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.377 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.378 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.378 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.378 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.378 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.379 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.379 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.380 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.380 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.380 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.381 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.381 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.381 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.382 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.382 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.382 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.383 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.383 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.383 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.384 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.384 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.384 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.385 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.385 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.385 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.386 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.386 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.387 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.388 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.388 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.389 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.390 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.390 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.390 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.390 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.391 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.392 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.392 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.393 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.393 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.393 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.419 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.446 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.447 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.448 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.448 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.449 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.449 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.450 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.450 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.450 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.451 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.451 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.452 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.453 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.454 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.460 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.461 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.462 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.463 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.463 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.464 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.464 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.464 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.464 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.464 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.465 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.465 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.465 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.465 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.466 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.468 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.470 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.470 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.470 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.471 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.471 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.472 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.472 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.472 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.473 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.473 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.473 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.474 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.474 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.474 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.475 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.475 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.476 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.476 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.476 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.476 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.477 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.477 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.477 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.478 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.478 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.479 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.479 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.479 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.480 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.480 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.481 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.481 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.481 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.481 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.482 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.482 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.483 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.483 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.483 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.483 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.484 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.484 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.484 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.485 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.485 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.486 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.487 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.487 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.488 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.488 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.488 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.488 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.489 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.489 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.490 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.491 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.491 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.492 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.492 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.492 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.493 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.493 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.493 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.493 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.494 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.494 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.494 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.495 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.495 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.495 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.496 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.496 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.496 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.496 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.497 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.497 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.498 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.498 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.498 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.498 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.499 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.499 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.499 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.499 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.500 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.500 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.500 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.501 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.501 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.501 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.501 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.502 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.502 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.503 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:14:59.503 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.503 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:14:59.504 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.504 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.504 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.504 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:14:59.512 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:14:59.521 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:14:59.523 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.523 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.524 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.524 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.524 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.524 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.525 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.525 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.525 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.525 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.526 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.526 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.526 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.526 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.526 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.526 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.527 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.527 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.527 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.527 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.528 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.528 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.528 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.528 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.528 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.528 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.529 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.529 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.529 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.529 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.529 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.530 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.530 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.530 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.530 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.530 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.531 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.531 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.531 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.531 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.531 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.532 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.532 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.532 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.532 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.532 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.532 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.533 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.533 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.533 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.533 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.533 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.534 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.534 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.534 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.534 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.534 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.535 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.535 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.535 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.535 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.535 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.536 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.537 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.537 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.537 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.537 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.537 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.537 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.538 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.540 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.540 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.540 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.541 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.541 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.541 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.544 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:14:59.548 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:14:59.564 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.564 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.565 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.566 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:14:59.572 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.573 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.573 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.575 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.584 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.585 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.585 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.586 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:14:59.592 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.594 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.594 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.596 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:14:59.602 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.602 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.603 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.605 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.605 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.610 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.611 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.611 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.613 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:14:59.619 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.620 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:14:59.621 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:14:59.622 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:14:59.654 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:59.654 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:59.655 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:59.655 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:59.655 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 08:14:59.656 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 08:14:59.657 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:59.657 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:59.658 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:59.658 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:59.660 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:14:59.660 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:14:59.661 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:14:59.661 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:14:59.661 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 08:14:59.662 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 08:19:50.111 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:50.112 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:50.112 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 08:19:50.617 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:50.649 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:51.112 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:51.128 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 08:19:51.224 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:51.225 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 08:19:51.238 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:51.654 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:51.656 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:51.656 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:51.659 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:51.664 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:51.665 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:51.666 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:51.667 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:51.667 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:51.667 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:51.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:51.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:51.669 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:51.669 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:51.670 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:51.670 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:51.671 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:51.672 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:51.672 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:51.678 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:51.681 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:51.822 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:19:52.345 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:52.391 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:52.406 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:52.412 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:52.413 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:52.415 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:52.416 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:52.417 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:52.419 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:52.419 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:52.499 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:52.771 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:52.792 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:52.793 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:52.796 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:52.807 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 14 ms
2025-08-04 08:19:52.847 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 2.956 seconds (process running for 3.727)
2025-08-04 08:19:53.148 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.151 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 08:19:53.154 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.182 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: fb54e3e8 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:19:53.182 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:19:53.188 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:19:53.188 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:19:53.188 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:19:53.200 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:53.202 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:19:53.202 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:19:53.215 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.217 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:19:53.217 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:19:53.218 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:19:53.218 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:19:53.218 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:19:53.218 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:19:53.220 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.221 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:19:53.221 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:19:53.221 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:19:53.222 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:19:53.222 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:19:53.222 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:19:53.224 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:53.227 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:53.229 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:19:53.229 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:19:53.229 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: fb54e3e8 - Procesamiento completado en 47ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:19:53.277 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:19:53.279 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 08:19:53.284 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:53.284 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:53.286 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:53.287 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:53.288 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 08:19:53.290 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 08:19:53.293 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:53.308 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:53.308 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:53.308 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:19:53.426 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:53.432 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:53.479 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:53.479 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 08:19:53.480 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:53.480 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 08:19:53.481 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:53.500 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:53.501 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:53.501 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:53.501 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:53.502 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:53.502 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:53.503 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:53.503 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:53.504 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:53.504 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:53.504 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:53.505 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:53.505 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:53.505 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:53.505 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:53.506 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:53.506 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:53.506 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:53.507 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:53.508 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:53.509 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:53.549 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:53.558 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.559 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:53.560 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.560 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:53.562 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:53.563 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.564 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:53.565 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.565 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:53.585 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:53.669 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:53.676 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:53.676 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:53.678 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:53.685 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 9 ms
2025-08-04 08:19:53.696 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.403 seconds (process running for 4.576)
2025-08-04 08:19:53.705 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:19:53.708 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:19:53.710 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:53.711 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:53.712 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:53.712 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:53.713 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.719 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 2fcef2e3 - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:19:53.719 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:19:53.719 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:19:53.719 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:19:53.719 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:19:53.721 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:53.722 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:19:53.722 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:19:53.724 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:53.725 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:53.726 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.726 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:19:53.726 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:19:53.727 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:19:53.727 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:19:53.727 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:19:53.727 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:19:53.729 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.730 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:19:53.730 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:19:53.730 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:19:53.730 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:19:53.730 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:19:53.730 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:19:53.732 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:53.734 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:19:53.734 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:19:53.734 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 2fcef2e3 - Procesamiento completado en 15ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:19:53.742 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:53.742 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:53.742 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:53.743 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:53.744 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 08:19:53.757 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 08:19:53.759 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:53.773 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:53.773 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:53.773 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:19:53.867 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:53.872 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:53.912 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:53.913 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 08:19:53.913 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:53.913 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 08:19:53.914 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:53.927 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:53.927 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:53.927 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:53.928 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:53.929 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:53.929 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:53.930 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:53.930 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:53.930 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:53.931 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:53.931 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:53.931 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:53.931 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:53.932 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:53.932 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:53.932 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:53.933 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:53.933 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:53.933 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:53.934 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:53.935 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:53.975 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:53.984 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.986 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:53.987 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:53.988 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:53.989 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:53.990 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.991 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:53.992 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:53.993 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:54.011 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:54.089 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:54.095 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:54.095 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:54.096 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:54.101 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:19:54.110 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.351 seconds (process running for 4.991)
2025-08-04 08:19:54.114 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:19:54.115 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:19:54.116 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:54.117 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:54.117 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:54.118 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:54.118 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.120 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: bb029a8c - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 08:19:54.121 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 08:19:54.127 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 08:19:54.131 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 08:19:54.145 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:54.145 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:54.146 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:54.146 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:54.146 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 08:19:54.148 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 08:19:54.149 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:54.177 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:54.177 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:54.177 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:19:54.282 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:54.287 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:54.321 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:54.321 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 08:19:54.322 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn21: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:54.322 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 08:19:54.322 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:54.334 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:54.335 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:54.335 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:54.335 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:54.336 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:54.336 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:54.336 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:54.337 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:54.337 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:54.337 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:54.337 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:54.338 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:54.338 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:54.338 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:54.338 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:54.339 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:54.339 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:54.339 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:54.340 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:54.340 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:54.341 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:54.371 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:54.377 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:54.378 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:54.378 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:54.379 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:54.380 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:54.381 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.382 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:54.382 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.383 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:54.398 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:54.466 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:54.471 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:54.471 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:54.473 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:54.477 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:19:54.486 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.337 seconds (process running for 5.367)
2025-08-04 08:19:54.490 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:19:54.492 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:19:54.493 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:54.493 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:54.493 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:54.493 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:54.494 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.496 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 55f3cace - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 08:19:54.496 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 55f3cace - Archivo vacío recibido
2025-08-04 08:19:54.497 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 08:19:54.504 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:54.504 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:54.504 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:54.504 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:54.505 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 08:19:54.526 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 08:19:54.528 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:54.541 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:54.541 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:54.541 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:19:54.636 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:54.642 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:54.680 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:54.680 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 08:19:54.681 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn25: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:54.681 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 08:19:54.682 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:54.695 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:54.696 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:54.696 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:54.696 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:54.697 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:54.697 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:54.697 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:54.698 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:54.698 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:54.698 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:54.698 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:54.699 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:54.699 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:54.699 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:54.699 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:54.700 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:54.700 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:54.700 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:54.700 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:54.701 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:54.702 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:54.732 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:54.737 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:54.738 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:54.738 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:54.739 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:54.740 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:54.741 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.742 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:54.742 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.743 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:54.762 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:54.819 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:54.825 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:54.826 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:54.827 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:54.831 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:19:54.840 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.312 seconds (process running for 5.721)
2025-08-04 08:19:54.844 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:19:54.845 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:19:54.847 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:54.847 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:54.847 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:54.847 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:54.848 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.850 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: dba73363 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 08:19:54.850 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 08:19:54.851 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:19:54.851 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:19:54.851 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:19:54.853 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:54.854 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:19:54.854 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:19:54.856 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:54.856 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:54.856 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:54.857 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:19:54.857 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:19:54.857 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:19:54.857 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 08:19:54.858 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:19:54.858 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 08:19:54.859 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:54.860 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:19:54.860 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:19:54.860 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:19:54.860 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 08:19:54.860 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: dba73363 - Procesamiento completado en 10ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 08:19:54.861 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: dba73363 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:19:54.871 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:54.871 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:54.872 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:54.872 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:54.873 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 08:19:54.884 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 08:19:54.886 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:54.898 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:54.899 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:54.899 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:19:54.985 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:54.990 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:55.022 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:55.023 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 08:19:55.023 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn29: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:55.023 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 08:19:55.024 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:55.036 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:55.036 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:55.036 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:55.037 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:55.037 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:55.038 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:55.039 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:55.039 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:55.039 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:55.040 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:55.040 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:55.040 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:55.041 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:55.041 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:55.041 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:55.041 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:55.041 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:55.042 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:55.042 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:55.043 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:55.044 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:55.077 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:55.082 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:55.083 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:55.084 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:55.086 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:55.088 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:55.090 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.090 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:55.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.091 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:55.108 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:55.174 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:55.183 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:55.183 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:55.184 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:55.189 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:19:55.202 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.316 seconds (process running for 6.082)
2025-08-04 08:19:55.205 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:19:55.206 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:19:55.207 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:55.208 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:55.208 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:55.208 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:55.209 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.211 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 6f6bd361 - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 08:19:55.211 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 6f6bd361 - Formato de archivo inválido: pedidos.txt
2025-08-04 08:19:55.211 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 08:19:55.217 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:55.218 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:55.218 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:55.219 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:55.219 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 08:19:55.235 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 08:19:55.236 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:55.247 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:55.247 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:55.247 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:19:55.342 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:55.347 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:55.377 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:55.378 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 08:19:55.378 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn33: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:55.378 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 08:19:55.379 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:55.392 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:55.392 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:55.392 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:55.392 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:55.393 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:55.393 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:55.394 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:55.394 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:55.394 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:55.394 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:55.394 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:55.395 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:55.395 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:55.395 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:55.395 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:55.396 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:55.396 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:55.396 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:55.396 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:55.397 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:55.398 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:55.424 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:55.429 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:55.430 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:55.431 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:55.431 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:55.433 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:55.434 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.435 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:55.436 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.437 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:55.453 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:55.514 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:55.520 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:19:55.520 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:19:55.522 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:55.526 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:19:55.534 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.298 seconds (process running for 6.415)
2025-08-04 08:19:55.537 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:19:55.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:19:55.540 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:55.540 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:19:55.541 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:55.541 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:19:55.541 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.543 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 6bf9a61b - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 08:19:55.543 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 08:19:55.543 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:19:55.543 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:19:55.543 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:19:55.545 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:55.545 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:19:55.545 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:19:55.547 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:55.547 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:55.547 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:55.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:19:55.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:19:55.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:19:55.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:19:55.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:19:55.548 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:19:55.549 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.550 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:19:55.550 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:19:55.550 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:19:55.550 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:19:55.550 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:19:55.550 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:19:55.551 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:19:55.552 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:55.552 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:19:55.552 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:19:55.553 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:55.553 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:19:55.553 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:19:55.553 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:19:55.553 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:19:55.554 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:19:55.554 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 08:19:55.554 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:55.555 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:19:55.556 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:19:55.556 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:19:55.556 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:19:55.557 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:55.559 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:19:55.559 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:19:55.559 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 6bf9a61b - Procesamiento completado en 16ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 08:19:55.559 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 6bf9a61b - Errores de validación encontrados: 4 errores totales
2025-08-04 08:19:55.825 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 08:19:55.826 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:19:55.826 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:19:55.826 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:19:55.827 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:19:55.828 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:19:55.828 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:19:55.828 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:19:55.828 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:19:55.828 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:19:55.828 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:19:55.828 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:19:55.828 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:19:55.829 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:19:55.829 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 08:19:55.829 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 08:19:55.829 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:19:55.829 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:19:55.829 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:19:55.829 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:19:55.830 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 08:19:55.830 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 08:19:55.830 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:19:55.830 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:19:55.830 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:19:55.830 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:19:55.830 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:19:55.843 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest]: RepositoryJpqlTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:19:55.864 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest
2025-08-04 08:19:55.867 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:56.040 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:56.041 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:56.041 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 08:19:56.113 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:56.123 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:56.134 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 08:19:56.149 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:5edcd961-8e43-401f-881a-040f98086d05;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 08:19:56.170 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:56.173 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:56.196 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:56.197 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:56.197 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:56.198 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:56.199 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:56.200 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:56.201 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:56.202 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:56.202 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:56.202 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:56.203 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:56.203 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:56.204 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:56.205 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:56.205 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:56.205 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:56.206 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:56.206 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:56.207 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:56.208 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:56.209 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:56.272 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 0.405 seconds (process running for 7.152)
2025-08-04 08:19:56.278 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.280 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.281 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.282 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.284 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.286 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.296 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.297 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.297 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.298 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.298 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.299 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.299 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:19:56.305 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.307 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.307 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.308 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.309 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.310 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.312 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.313 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.313 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.313 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.314 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.314 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.315 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.316 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.321 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.323 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.326 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.327 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.327 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.328 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.331 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.332 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.332 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.333 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.333 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.334 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.334 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:19:56.339 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.340 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.341 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.342 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.342 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.343 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.345 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.345 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.346 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.346 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.346 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.347 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.347 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:56.348 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:56.352 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.354 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.355 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.355 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.356 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.358 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.360 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.361 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.361 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.361 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.362 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.362 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.362 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.366 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.370 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.371 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.372 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.372 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.373 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.374 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.376 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.377 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.377 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.377 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.378 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.378 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.379 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.380 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.384 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.386 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.387 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.387 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.388 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.389 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.392 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.393 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.393 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.394 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.394 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.394 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.394 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:19:56.403 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.405 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.406 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.407 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.408 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.408 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.411 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.412 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.412 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.412 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.413 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.413 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.413 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.414 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.420 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.425 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.426 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.427 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.428 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.429 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.431 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.432 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.432 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.432 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.433 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.433 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.433 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:19:56.438 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.440 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.440 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.441 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.442 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.443 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.445 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.445 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.446 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.446 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.446 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.448 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.448 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:19:56.450 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:19:56.466 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.468 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.469 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.470 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.470 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.471 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.472 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.474 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.475 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.475 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.476 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.476 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.477 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.477 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.477 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:19:56.481 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.482 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.483 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.483 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.484 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.486 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.489 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.490 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.490 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.490 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.491 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.492 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.492 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:56.494 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:56.497 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.498 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.499 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.499 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.500 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.500 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:56.503 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.504 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.504 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.504 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.504 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.505 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:56.505 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:19:56.511 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest]: CacheAndIndexPerformanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:19:56.517 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest
2025-08-04 08:19:56.520 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:19:56.536 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Starting CacheAndIndexPerformanceTest using Java 17.0.15 with PID 10084 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:19:56.536 [main] DEBUG [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:19:56.536 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - The following 1 profile is active: "test"
2025-08-04 08:19:56.707 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:19:56.714 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 08:19:56.795 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:19:56.796 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 08:19:56.796 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn60: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:19:56.796 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 08:19:56.797 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:19:56.813 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:56.814 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:56.814 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:56.815 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:19:56.815 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:19:56.816 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:19:56.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:19:56.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:19:56.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:19:56.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:19:56.818 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:19:56.818 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:19:56.819 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:19:56.819 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:19:56.819 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:19:56.819 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:19:56.820 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:19:56.820 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:19:56.820 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:19:56.821 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:19:56.822 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:56.882 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:19:56.892 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.893 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.894 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:56.894 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:56.896 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:19:56.898 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.898 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.899 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:56.900 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:56.931 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:19:57.079 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:19:57.089 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:19:57.122 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Started CacheAndIndexPerformanceTest in 0.603 seconds (process running for 8.002)
2025-08-04 08:19:57.127 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.128 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.129 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.129 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.130 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.131 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.132 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.132 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.161 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:19:57.166 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.167 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.168 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.170 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.175 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.176 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.176 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.178 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.178 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.179 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.179 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.180 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.180 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.181 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.181 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.182 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.182 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.183 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.184 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.185 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.187 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.187 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.187 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.188 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.189 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.190 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.191 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.192 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.192 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.192 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.193 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.193 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.194 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.194 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.195 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.195 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.195 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.196 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.196 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.197 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.197 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.198 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.198 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.199 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.199 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.199 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.200 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.201 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.201 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.202 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.202 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.203 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.203 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.203 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.204 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.204 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.205 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.205 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.205 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.206 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.206 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.207 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.207 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.208 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.208 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.209 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.209 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.210 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.210 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.210 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.210 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.212 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.212 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.213 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.213 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.213 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.214 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.214 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.214 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.215 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.215 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.216 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.216 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.216 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.217 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.217 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.218 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.219 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.220 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.221 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.221 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.222 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.222 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.222 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.223 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.224 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.224 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.225 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.225 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.226 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.226 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.226 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.227 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.228 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.228 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.229 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.229 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.229 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.230 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.230 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.230 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.231 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.231 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.232 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.232 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.233 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.233 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.233 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.234 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.234 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.235 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.235 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.235 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.236 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.236 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.236 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.237 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.238 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.238 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.239 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.239 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.240 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.240 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.240 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.241 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.242 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.242 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.243 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.244 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.245 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.245 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.245 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.245 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.246 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.246 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.247 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.247 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.248 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.248 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.248 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.249 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.249 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.250 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.251 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.251 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.251 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.252 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.252 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.252 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.253 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.253 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.254 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.254 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.254 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.255 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.255 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.255 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.256 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.256 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.257 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.257 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.258 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.258 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.258 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.258 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.259 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.259 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.260 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.260 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.261 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.261 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.261 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.262 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.262 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.263 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.263 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.263 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.264 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.264 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.264 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.275 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.277 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.278 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.319 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.320 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.321 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.322 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.322 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.322 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.323 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.324 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.325 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.325 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.326 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.327 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.327 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.329 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.339 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.340 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.342 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.343 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.343 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.344 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.344 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.344 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.345 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.345 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.346 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.346 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.347 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.347 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.347 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.348 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.348 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.349 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.349 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.350 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.350 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.351 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.351 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.352 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.352 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.353 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.353 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.354 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.354 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.355 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.355 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.355 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.356 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.356 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.357 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.357 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.358 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.358 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.358 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.358 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.359 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.359 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.360 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.361 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.361 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.361 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.362 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.362 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.363 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.363 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.364 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.364 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.364 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.364 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.365 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.365 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.366 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.366 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.366 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.367 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.367 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.368 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.368 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.368 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.369 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.370 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.370 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.370 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.371 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.371 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.371 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.372 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.373 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.373 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.374 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.374 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.374 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.375 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.375 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.375 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.376 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.377 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.377 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.377 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.378 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.378 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.378 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.379 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.380 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.380 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.380 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.381 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.381 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.381 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.382 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.382 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.383 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.383 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.384 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.385 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.385 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.386 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.386 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.387 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.388 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.389 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.389 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.390 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.390 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.391 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.391 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.391 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.392 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.392 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.392 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.393 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.393 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.393 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.394 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.394 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.398 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.398 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.399 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.399 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.400 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.400 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.400 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.401 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.401 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.401 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.402 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.402 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.403 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.403 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.403 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.404 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.404 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.405 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.405 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.405 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.406 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.406 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.406 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.407 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.407 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.408 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.408 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.408 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.409 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.409 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.410 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.410 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.411 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.411 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.411 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.412 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.412 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.412 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.413 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.413 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.413 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.414 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.414 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.415 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.415 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.415 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.415 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.416 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.416 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.417 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.417 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.417 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.418 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.418 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.418 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.418 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.419 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.419 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.420 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.420 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.421 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.421 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.421 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.422 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.423 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.423 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.423 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.423 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.424 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.424 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.424 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.424 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.425 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.425 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.426 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.426 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.426 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.426 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.427 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.427 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.428 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.428 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.428 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.429 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.429 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.429 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.430 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.430 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.431 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.431 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.431 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.431 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.432 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.432 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.432 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.433 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.433 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.434 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.434 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.435 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.435 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.435 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.435 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.436 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.436 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.437 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.437 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.438 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.438 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.438 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.439 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.439 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.440 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.440 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.441 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.441 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.441 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.441 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.442 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.442 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.443 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.443 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.443 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.444 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.444 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.444 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.444 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.445 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.445 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.445 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.446 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.446 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.446 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.447 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.447 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.447 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.448 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.448 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.448 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.449 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.449 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.449 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.450 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.450 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.451 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.451 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.452 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.452 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.453 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.453 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.453 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.454 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.454 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.455 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.456 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.457 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.457 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.458 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.458 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.459 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.460 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.460 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.461 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.461 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.462 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.462 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.463 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.463 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.464 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.464 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.465 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.465 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.465 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.465 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.466 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.466 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.467 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.467 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.468 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.468 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.469 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.469 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.469 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.469 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.470 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.470 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.471 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.471 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.471 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.472 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.472 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.472 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.473 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.473 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.474 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.474 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.474 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.475 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.475 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.475 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.476 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.476 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.477 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.477 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.478 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.478 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.478 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.478 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.479 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.479 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.480 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.480 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.480 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.481 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.481 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.481 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.482 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.482 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.482 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.483 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.486 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.486 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.487 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.488 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.489 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.489 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.490 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.490 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.491 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.491 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.491 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.491 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.492 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.492 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.493 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.493 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.493 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.493 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.494 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.494 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.494 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.495 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.495 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.495 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.496 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.496 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.496 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.497 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.497 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.497 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.498 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.498 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.499 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.499 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.499 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.499 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.500 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.500 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.501 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.501 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.501 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.501 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.501 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.502 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.502 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.503 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.503 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.503 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.504 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.504 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.504 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.504 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.505 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.505 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.506 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.506 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.507 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.507 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.507 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.508 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.508 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.509 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.509 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.509 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.510 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.510 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.510 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.510 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.511 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.512 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.512 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.512 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.513 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.513 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.513 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.514 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.514 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.514 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.515 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.515 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.515 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.516 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.516 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.516 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.517 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.517 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.518 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.519 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.520 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.520 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.520 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.521 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.521 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.522 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.522 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.522 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.523 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.523 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.523 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.523 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.524 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.524 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.524 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.525 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.525 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.525 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.525 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.526 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.526 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.526 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.527 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.527 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.527 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.527 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.527 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.527 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.528 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.528 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.528 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.529 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.529 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.529 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.529 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.529 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.530 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.530 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.530 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.530 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.531 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.531 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.531 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.531 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.532 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.532 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.532 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.532 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.532 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.533 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.533 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.533 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.533 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.533 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.534 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.534 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.534 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.535 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.535 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.536 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.536 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.537 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.538 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.538 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.539 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.539 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.539 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.539 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.540 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.540 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.540 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.540 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.541 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.541 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.541 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.541 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.541 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.542 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.542 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.542 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.542 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.542 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.543 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.543 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.543 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.543 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.543 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.543 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.544 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.544 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.544 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.544 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.545 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.545 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.545 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.545 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.546 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.546 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.546 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.547 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.547 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.547 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.547 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.547 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.548 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.548 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.548 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.548 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.549 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.549 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.549 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.549 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.549 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.549 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.550 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.550 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.550 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.550 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.551 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.551 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.552 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.552 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.552 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.552 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.553 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.553 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.553 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.553 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.554 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.554 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.554 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.555 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.557 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.557 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.558 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.558 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.558 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.558 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.559 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.559 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.561 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.561 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.562 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.562 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.564 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.564 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.564 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.565 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.567 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.569 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.570 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.571 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.574 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.574 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.575 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.576 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.577 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.578 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:19:57.578 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.579 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:19:57.579 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.579 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.580 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.581 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:19:57.587 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:19:57.602 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:19:57.636 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.677 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.678 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.678 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.678 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.678 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.678 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.678 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.679 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.679 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.679 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.680 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.680 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.681 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.681 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.682 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.683 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.685 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.686 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.687 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.692 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.695 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.695 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.695 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.695 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.695 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.696 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.698 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.699 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.699 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.699 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.699 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.703 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.703 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.704 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.705 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.705 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.705 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.706 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.706 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.706 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.707 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.708 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.708 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.709 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.710 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.711 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.712 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.712 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.712 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.713 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.713 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.713 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.714 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.714 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.714 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.715 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.715 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.715 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.716 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.716 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.716 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.723 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:19:57.730 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:19:57.739 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.739 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.740 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.742 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:19:57.754 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.755 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.755 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.759 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.770 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.771 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.772 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.774 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:19:57.781 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.782 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.782 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.786 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:19:57.799 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.800 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.801 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.805 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.808 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.817 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.818 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.820 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.827 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:19:57.841 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.841 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:19:57.842 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:19:57.845 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:19:57.862 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:57.862 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:57.863 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:57.864 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:57.866 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 08:19:57.868 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 08:19:57.870 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:57.870 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:57.871 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:57.872 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:57.874 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:19:57.874 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:19:57.874 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:19:57.874 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:19:57.874 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 08:19:57.875 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 08:22:27.312 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Starting PedidoControllerIntegrationTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:27.313 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:27.314 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - The following 1 profile is active: "test"
2025-08-04 08:22:27.816 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:27.848 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:28.711 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:28.729 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 08:22:28.838 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:28.839 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 08:22:28.854 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:29.328 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:29.330 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:29.331 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:29.333 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:29.336 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:29.337 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:29.338 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:29.339 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:29.339 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:29.340 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:29.340 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:29.340 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:29.341 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:29.341 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:29.342 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:29.342 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:29.343 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:29.344 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:29.344 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:29.350 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:29.353 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:29.491 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 08:22:30.128 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:30.200 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:30.219 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:30.227 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:30.227 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:30.229 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:30.231 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:30.232 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:30.233 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:30.234 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:30.369 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:32.120 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:32.394 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:32.394 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:32.496 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:32.528 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 134 ms
2025-08-04 08:22:32.609 [main] INFO  [] [] c.j.p.i.c.PedidoControllerIntegrationTest - Started PedidoControllerIntegrationTest in 5.515 seconds (process running for 6.171)
2025-08-04 08:22:33.484 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:33.491 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 08:22:33.494 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:33.542 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c80f093b - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:22:33.543 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:22:33.552 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:22:33.552 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:22:33.552 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:22:33.573 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:33.585 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:22:33.586 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:22:33.604 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:33.605 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:22:33.606 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:22:33.607 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:22:33.607 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:22:33.607 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:22:33.607 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:22:33.609 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:33.609 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:22:33.610 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:22:33.610 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:22:33.611 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:22:33.611 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:22:33.611 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:22:33.612 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:33.615 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:33.617 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:22:33.617 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:22:33.617 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: c80f093b - Procesamiento completado en 74ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:22:33.680 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:22:33.682 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 08:22:33.687 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:33.687 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:33.689 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:33.690 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:33.691 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 08:22:33.693 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 08:22:33.695 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:33.714 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:33.714 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:33.714 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:22:33.842 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:33.849 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:33.898 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:33.899 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 08:22:33.900 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:33.900 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 08:22:33.900 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:33.917 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:33.917 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:33.918 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:33.918 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:33.919 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:33.919 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:33.920 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:33.920 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:33.920 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:33.921 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:33.921 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:33.921 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:33.922 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:33.922 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:33.922 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:33.923 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:33.923 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:33.924 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:33.924 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:33.925 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:33.926 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:33.972 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:33.980 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:33.980 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:33.981 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:33.981 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:33.983 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:33.984 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:33.985 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:33.986 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:33.987 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:34.008 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:34.131 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:34.152 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:34.153 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:34.155 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:34.162 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 9 ms
2025-08-04 08:22:34.174 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.48 seconds (process running for 7.737)
2025-08-04 08:22:34.183 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:22:34.188 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:22:34.190 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:34.192 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:34.192 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:34.193 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:34.193 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:34.195 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: cb7ea91b - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 08:22:34.196 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 08:22:34.196 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:22:34.196 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:22:34.196 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:22:34.197 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:34.198 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:22:34.198 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:22:34.199 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:34.200 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:34.200 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:34.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:22:34.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:22:34.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:22:34.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:22:34.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:22:34.201 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:22:34.203 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:34.203 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:22:34.203 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:22:34.203 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:22:34.204 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:22:34.204 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:22:34.204 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:22:34.205 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:34.206 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:22:34.206 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 08:22:34.206 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: cb7ea91b - Procesamiento completado en 10ms - Total: 1, Guardados: 1, Tipos de errores: 0
2025-08-04 08:22:34.214 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:34.214 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:34.215 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:34.215 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:34.216 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 08:22:34.249 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 08:22:34.250 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:34.264 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:34.264 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:34.264 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:22:34.473 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:34.495 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:34.650 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:34.653 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 08:22:34.657 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:34.657 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 08:22:34.658 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:34.712 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:34.712 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:34.713 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:34.713 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:34.716 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:34.720 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:34.722 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:34.722 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:34.724 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:34.725 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:34.725 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:34.725 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:34.726 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:34.727 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:34.728 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:34.728 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:34.728 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:34.729 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:34.730 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:34.731 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:34.734 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:34.835 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:34.845 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:34.846 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:34.847 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:34.848 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:34.850 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:34.852 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:34.853 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:34.855 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:34.856 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:34.890 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:34.974 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:34.980 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:34.981 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:34.982 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:34.990 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 9 ms
2025-08-04 08:22:35.001 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.751 seconds (process running for 8.564)
2025-08-04 08:22:35.005 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:22:35.008 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:22:35.010 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:35.011 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:35.011 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:35.011 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:35.012 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.014 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c04ebbee - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 08:22:35.014 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 08:22:35.021 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:57) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443) ~[.cp/:na]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211) ~[.cp/:na]
2025-08-04 08:22:35.029 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 08:22:35.068 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:35.069 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:35.070 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:35.071 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:35.071 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 08:22:35.072 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 08:22:35.074 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:35.093 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:35.093 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:35.093 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:22:35.213 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:35.218 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:35.259 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:35.260 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 08:22:35.260 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn28: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:35.260 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 08:22:35.261 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:35.275 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:35.275 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:35.275 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:35.275 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:35.276 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:35.276 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:35.277 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:35.277 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:35.277 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:35.277 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:35.278 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:35.278 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:35.278 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:35.278 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:35.279 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:35.279 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:35.279 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:35.280 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:35.280 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:35.281 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:35.282 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:35.323 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:35.329 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:35.330 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:35.330 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:35.331 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:35.332 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:35.333 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.334 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:35.335 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.336 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:35.355 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:35.424 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:35.429 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:35.429 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:35.430 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:35.435 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 08:22:35.444 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.37 seconds (process running for 9.007)
2025-08-04 08:22:35.447 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:22:35.449 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:22:35.450 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:35.452 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:35.452 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:35.452 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:35.453 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.456 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 893c3aa3 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 08:22:35.456 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 893c3aa3 - Archivo vacío recibido
2025-08-04 08:22:35.456 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 08:22:35.463 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:35.464 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:35.464 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:35.465 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:35.465 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 08:22:35.472 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 08:22:35.474 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:35.487 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:35.487 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:35.487 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:22:35.609 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:35.614 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:35.655 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:35.656 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 08:22:35.656 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn32: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:35.656 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 08:22:35.657 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:35.670 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:35.670 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:35.670 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:35.671 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:35.671 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:35.672 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:35.672 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:35.672 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:35.673 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:35.673 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:35.673 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:35.674 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:35.674 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:35.674 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:35.675 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:35.675 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:35.675 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:35.675 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:35.676 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:35.676 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:35.677 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:35.708 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:35.714 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:35.715 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:35.715 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:35.716 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:35.718 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:35.723 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.724 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:35.724 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.725 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:35.744 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:35.803 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:35.808 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:35.808 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:35.809 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:35.813 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:22:35.824 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.35 seconds (process running for 9.387)
2025-08-04 08:22:35.828 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:22:35.829 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:22:35.830 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:35.831 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:35.831 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:35.831 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:35.832 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.834 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 6e4cae10 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 08:22:35.834 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 08:22:35.834 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 08:22:35.834 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:22:35.834 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:22:35.836 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:35.836 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:22:35.836 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:22:35.838 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:35.838 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:35.838 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:35.839 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:22:35.839 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:22:35.839 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:22:35.839 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 08:22:35.840 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:22:35.840 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 08:22:35.841 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:35.842 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:22:35.842 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:22:35.842 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:22:35.843 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 08:22:35.843 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 6e4cae10 - Procesamiento completado en 9ms - Total: 1, Guardados: 0, Tipos de errores: 4
2025-08-04 08:22:35.843 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 6e4cae10 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:22:35.850 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:35.850 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:35.850 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:35.851 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:35.851 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 08:22:35.865 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 08:22:35.867 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:35.884 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:35.884 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:35.884 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:22:35.996 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:36.001 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:36.037 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:36.038 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 08:22:36.039 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn36: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:36.039 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 08:22:36.039 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:36.052 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:36.052 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:36.052 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:36.053 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:36.053 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:36.054 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:36.055 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:36.055 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:36.055 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:36.055 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:36.055 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:36.056 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:36.056 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:36.056 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:36.056 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:36.056 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:36.057 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:36.057 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:36.057 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:36.058 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:36.060 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:36.094 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:36.100 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:36.101 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:36.102 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:36.102 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:36.103 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:36.105 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.106 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:36.106 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.107 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:36.127 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:36.188 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:36.196 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:36.196 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:36.197 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:36.201 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:22:36.217 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.35 seconds (process running for 9.78)
2025-08-04 08:22:36.220 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:22:36.222 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:22:36.223 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:36.224 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:36.224 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:36.224 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:36.225 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.227 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 1ddc98ed - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 08:22:36.227 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 1ddc98ed - Formato de archivo inválido: pedidos.txt
2025-08-04 08:22:36.227 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 08:22:36.243 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:36.243 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:36.243 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:36.244 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:36.244 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 08:22:36.249 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 08:22:36.251 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:36.265 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:36.266 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:36.266 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 08:22:36.361 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:36.366 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:36.403 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:36.403 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 08:22:36.404 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn40: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:36.404 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 08:22:36.406 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:36.420 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:36.420 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:36.420 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:36.420 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:36.421 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:36.422 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:36.422 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:36.422 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:36.422 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:36.423 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:36.423 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:36.423 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:36.423 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:36.424 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:36.424 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:36.424 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:36.425 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:36.426 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:36.426 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:36.426 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:36.427 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:36.458 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:36.464 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:36.464 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:36.465 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:36.466 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:36.467 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:36.468 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.468 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:36.469 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.469 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:36.481 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:36.537 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:36.542 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 08:22:36.542 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 08:22:36.543 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:36.547 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 08:22:36.555 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.304 seconds (process running for 10.119)
2025-08-04 08:22:36.559 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 08:22:36.560 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 08:22:36.562 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:36.562 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 08:22:36.562 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:36.563 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 08:22:36.563 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.565 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: aefb3189 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 08:22:36.565 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 08:22:36.566 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:22:36.566 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:22:36.566 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:22:36.567 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:36.568 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:22:36.568 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:22:36.569 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:36.570 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:36.570 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:36.571 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 08:22:36.571 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:22:36.571 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:22:36.571 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:22:36.571 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:22:36.571 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:22:36.572 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.572 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:22:36.572 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:22:36.573 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:22:36.573 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:22:36.573 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:22:36.573 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:22:36.573 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:22:36.574 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:36.574 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:22:36.574 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 08:22:36.574 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:36.575 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 08:22:36.575 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:22:36.575 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:22:36.575 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:22:36.575 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:22:36.575 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 08:22:36.576 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:36.576 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 08:22:36.576 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:22:36.576 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:22:36.576 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:22:36.577 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:36.578 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:22:36.578 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:22:36.578 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: aefb3189 - Procesamiento completado en 13ms - Total: 2, Guardados: 1, Tipos de errores: 4
2025-08-04 08:22:36.578 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: aefb3189 - Errores de validación encontrados: 4 errores totales
2025-08-04 08:22:36.919 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 08:22:36.920 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 08:22:36.920 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 08:22:36.920 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 08:22:36.922 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 08:22:36.922 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 08:22:36.922 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 08:22:36.922 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 08:22:36.923 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 08:22:36.923 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 08:22:36.923 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 08:22:36.923 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 08:22:36.924 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 08:22:36.924 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 08:22:36.924 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 08:22:36.924 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 08:22:36.924 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 08:22:36.924 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 08:22:36.924 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 08:22:36.925 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 08:22:36.925 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 08:22:36.925 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 08:22:36.925 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 08:22:36.925 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 08:22:36.925 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 08:22:36.925 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 08:22:36.925 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 08:22:36.926 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 08:22:36.926 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 08:22:36.926 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 08:22:36.926 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 08:22:36.926 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 08:22:36.927 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 08:22:36.943 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest]: RepositoryJpqlTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:22:36.973 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest
2025-08-04 08:22:36.976 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:37.013 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:37.013 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:37.013 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 08:22:37.101 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:37.112 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:37.125 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 08:22:37.140 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:4c007a08-bd86-4b81-a0f5-ad103a9d2ea2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 08:22:37.171 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:37.173 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:37.196 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:37.196 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:37.196 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:37.197 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:37.198 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:37.199 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:37.200 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:37.200 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:37.201 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:37.201 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:37.202 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:37.202 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:37.203 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:37.204 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:37.204 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:37.205 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:37.205 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:37.206 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:37.206 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:37.207 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:37.209 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:37.277 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 0.3 seconds (process running for 10.84)
2025-08-04 08:22:37.283 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.287 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.289 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.290 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.291 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.293 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.298 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.299 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.299 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.300 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.300 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.301 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.301 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:22:37.310 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.312 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.313 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.314 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.314 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.316 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.318 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.319 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.320 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.320 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.321 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.322 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.323 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.324 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.329 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.331 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.331 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.332 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.333 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.336 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.340 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.340 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.341 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.341 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.342 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.342 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.343 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:22:37.348 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.350 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.351 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.352 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.352 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.354 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.357 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.357 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.358 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.358 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.358 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.359 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.360 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:37.361 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:37.365 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.367 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.367 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.368 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.369 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.370 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.373 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.373 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.373 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.374 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.374 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.375 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.375 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.376 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.381 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.382 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.383 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.383 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.384 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.386 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.388 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.389 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.389 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.390 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.390 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.390 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.391 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.392 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.396 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.399 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.400 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.400 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.401 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.402 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.412 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.413 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.413 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.413 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.414 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.414 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.415 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:22:37.423 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.427 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.429 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.430 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.432 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.434 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.439 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.441 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.442 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.443 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.444 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.444 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.444 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.445 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.449 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.452 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.454 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.456 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.457 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.459 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.461 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.461 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.461 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.462 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.462 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.462 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.463 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:22:37.467 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.468 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.468 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.469 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.469 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.470 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.472 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.473 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.473 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.473 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.474 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.474 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.475 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:22:37.475 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 08:22:37.479 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.481 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.481 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.482 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.482 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.483 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.484 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.488 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.488 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.488 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.489 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.489 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.490 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.490 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.491 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:22:37.495 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.496 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.496 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.497 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.497 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.498 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.501 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.501 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.501 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.501 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.502 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.502 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.503 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:37.505 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:37.509 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.510 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.510 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.511 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.511 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.512 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:37.515 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.515 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.516 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.516 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.516 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.517 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:37.517 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:22:37.525 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest]: CacheAndIndexPerformanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 08:22:37.532 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest
2025-08-04 08:22:37.534 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 08:22:37.559 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Starting CacheAndIndexPerformanceTest using Java 17.0.15 with PID 11092 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 08:22:37.559 [main] DEBUG [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 08:22:37.560 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - The following 1 profile is active: "test"
2025-08-04 08:22:37.745 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 08:22:37.753 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 3 JPA repository interfaces.
2025-08-04 08:22:37.835 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 08:22:37.836 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 08:22:37.837 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn67: url=jdbc:h2:mem:testdb user=SA
2025-08-04 08:22:37.837 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 08:22:37.837 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 08:22:37.859 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:37.860 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:37.861 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:37.861 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 08:22:37.862 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 08:22:37.863 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 08:22:37.863 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 08:22:37.863 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 08:22:37.864 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 08:22:37.864 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 08:22:37.864 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 08:22:37.865 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 08:22:37.865 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 08:22:37.866 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 08:22:37.866 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 08:22:37.866 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 08:22:37.866 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 08:22:37.867 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 08:22:37.867 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 08:22:37.868 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 08:22:37.869 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:37.956 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 08:22:37.968 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.970 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.971 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:37.972 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:37.974 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 08:22:37.975 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.976 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:37.977 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:37.978 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.042 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 08:22:38.221 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 08:22:38.232 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 08:22:38.259 [main] INFO  [] [] c.j.p.i.p.CacheAndIndexPerformanceTest - Started CacheAndIndexPerformanceTest in 0.725 seconds (process running for 11.823)
2025-08-04 08:22:38.266 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.267 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.267 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.268 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.269 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.271 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.271 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.272 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.319 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:38.320 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 08:22:38.326 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.327 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.328 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.331 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.336 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.337 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.337 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.339 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.340 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.340 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.341 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.341 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.341 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.342 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.342 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.343 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.343 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.344 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.344 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.345 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.345 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.346 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.346 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.347 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.347 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.348 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.349 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.349 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.350 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.350 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.351 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.352 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.353 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.353 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.354 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.354 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.355 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.355 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.356 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.357 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.358 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.358 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.359 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.360 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.360 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.360 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.361 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.362 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.362 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.363 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.363 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.364 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.364 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.364 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.365 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.366 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.366 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.367 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.368 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.368 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.369 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.369 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.369 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.370 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.370 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.371 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.372 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.372 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.372 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.373 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.373 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.374 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.375 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.376 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.376 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.392 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.406 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.411 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.416 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.442 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.455 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.469 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.469 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.494 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.495 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.498 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.500 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.502 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.503 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.540 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.543 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.545 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.546 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.551 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.552 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.558 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.559 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.560 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.562 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.565 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.566 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.567 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.567 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.568 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.570 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.572 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.573 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.573 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.574 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.574 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.576 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.581 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.581 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.582 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.583 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.583 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.584 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.584 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.584 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.585 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.586 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.587 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.587 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.588 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.588 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.588 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.589 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.589 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.589 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.591 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.591 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.593 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.593 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.593 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.594 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.595 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.595 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.596 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.596 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.597 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.597 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.597 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.598 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.598 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.599 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.599 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.600 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.600 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.600 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.601 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.601 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.602 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.602 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.603 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.603 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.604 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.604 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.604 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.605 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.606 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.606 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.607 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.607 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.608 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.608 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.608 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.609 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.609 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.610 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.610 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.611 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.611 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.612 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.612 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.612 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.613 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.614 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.614 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.614 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.615 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.615 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.616 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.616 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.617 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.617 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.618 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.619 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.620 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.620 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.620 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.621 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.622 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.623 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.624 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.625 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.627 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.627 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.628 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.628 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.629 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.630 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.631 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.631 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.632 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.632 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.632 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.633 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.634 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.634 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.635 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.635 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.636 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.636 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.637 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.637 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.638 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.639 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.639 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.640 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.640 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.641 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.641 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.642 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.642 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.643 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.643 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.644 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.644 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.644 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.644 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.645 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.646 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.646 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.646 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.647 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.647 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.648 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.648 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.648 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.649 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.649 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.650 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.651 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.651 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.652 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.652 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.652 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.653 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.653 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.654 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.655 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.655 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.656 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.656 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.656 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.657 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.658 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.658 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.658 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.659 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.659 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.659 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.660 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.660 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.661 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.661 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.661 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.662 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.662 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.662 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.663 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.663 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.664 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.664 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.665 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.665 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.665 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.665 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.666 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.667 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.667 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.668 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.668 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.668 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.669 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.669 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.670 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.670 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.671 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.671 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.671 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.672 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.672 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.673 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.673 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.676 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.677 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.678 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.679 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.681 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.681 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.682 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.683 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.685 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.686 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.687 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.688 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.688 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.689 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.689 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.689 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.690 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.690 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.691 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.691 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.692 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.692 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.692 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.693 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.694 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.694 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.695 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.695 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.696 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.696 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.696 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.697 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.697 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.698 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.698 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.699 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.699 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.699 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.700 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.700 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.700 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.701 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.701 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.702 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.702 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.702 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.703 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.703 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.704 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.704 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.705 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.705 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.706 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.706 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.706 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.707 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.708 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.708 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.708 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.709 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.709 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.709 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.710 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.710 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.711 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.711 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.712 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.712 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.712 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.713 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.713 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.713 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.714 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.715 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.715 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.716 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.716 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.716 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.717 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.717 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.718 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.718 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.719 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.719 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.720 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.720 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.720 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.720 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.721 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.721 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.722 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.722 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.723 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.723 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.723 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.723 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.724 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.724 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.725 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.725 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.726 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.726 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.726 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.727 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.727 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.727 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.728 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.728 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.728 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.729 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.729 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.729 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.730 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.730 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.730 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.731 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.731 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.732 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.732 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.732 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.733 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.733 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.734 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.734 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.735 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.735 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.735 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.736 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.737 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.738 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.739 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.740 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.741 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.741 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.741 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.742 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.743 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.743 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.744 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.744 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.745 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.745 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.746 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.746 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.747 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.747 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.748 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.749 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.749 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.749 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.750 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.750 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.751 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.751 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.751 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.752 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.752 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.753 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.753 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.753 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.754 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.754 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.755 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.755 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.755 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.755 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.756 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.756 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.757 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.757 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.757 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.757 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.758 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.758 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.758 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.759 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.759 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.759 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.760 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.760 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.760 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.760 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.761 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.761 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.762 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.762 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.762 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.763 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.763 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.763 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.763 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.764 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.764 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.765 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.765 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.765 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.766 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.766 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.766 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.766 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.767 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.767 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.768 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.768 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.768 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.768 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.769 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.769 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.770 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.770 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.770 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.771 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.771 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.771 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.772 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.772 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.773 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.773 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.774 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.774 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.774 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.775 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.775 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.775 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.776 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.776 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.777 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.777 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.777 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.778 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.778 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.778 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.779 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.779 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.780 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.780 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.780 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.780 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.781 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.781 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.781 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.782 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.782 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.782 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.783 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.783 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.783 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.784 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.785 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.785 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.786 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.786 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.787 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.787 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.787 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.788 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.788 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.789 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.789 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.789 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.790 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.790 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.790 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.791 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.791 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.791 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.792 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.792 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.793 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.793 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.793 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.793 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.794 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.794 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.794 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.795 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.795 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.795 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.795 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.796 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.796 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.797 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.797 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.797 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.798 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.798 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.798 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.798 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.799 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.799 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.800 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.800 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.800 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.801 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.801 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.801 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.802 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.802 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.802 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.803 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.803 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.804 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.804 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.804 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.805 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.806 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.806 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.806 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.807 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.807 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.807 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.807 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.808 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.808 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.808 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.809 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.809 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.809 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.810 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.810 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.810 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.811 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.811 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.811 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.812 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.812 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.812 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.812 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.813 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.814 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.815 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.815 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.816 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.816 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.817 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.818 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.819 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.819 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.819 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.820 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.821 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.821 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.821 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.822 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.822 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.823 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.823 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.824 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.824 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.825 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.825 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.825 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.826 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.826 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.827 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.828 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.828 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.829 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.829 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.829 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.830 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.831 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.831 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.832 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.832 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.833 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.833 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.833 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.834 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.834 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.835 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.835 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.835 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.835 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.836 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.836 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.837 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.837 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.838 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.838 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.838 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.839 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.839 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.839 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.840 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.840 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.840 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.841 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.841 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.841 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.841 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.842 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.843 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.843 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.844 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.844 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.844 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.844 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.845 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.845 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.846 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.846 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.846 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.846 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.847 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.847 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.847 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.847 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.848 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.848 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.848 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.849 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.849 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.849 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.850 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.850 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.851 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.851 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.852 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.852 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.853 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.853 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.853 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.854 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.854 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.854 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.855 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.856 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.857 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.857 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.857 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.857 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.858 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.858 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.858 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.859 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.859 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.859 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.859 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.859 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.860 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.860 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.861 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.861 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.861 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.862 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.862 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.862 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.863 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.863 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.864 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.864 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.864 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.865 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.865 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.865 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.866 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.866 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.867 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.867 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.867 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.867 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.868 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.868 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.869 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.869 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.869 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.869 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.870 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.870 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.870 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.870 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.871 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.871 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.872 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.872 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.872 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.872 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.873 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.873 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.873 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.874 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.874 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.874 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.874 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.875 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.875 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.875 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.875 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.876 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.876 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.876 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.877 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.877 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.877 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.877 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.878 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.878 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 08:22:38.879 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.879 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 08:22:38.879 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.879 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.880 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.880 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 08:22:38.883 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 08:22:38.898 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 08:22:38.900 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.900 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.901 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.901 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.901 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.901 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.901 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.902 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.902 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.902 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.902 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.902 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.903 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.903 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.903 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.903 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.904 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.904 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.904 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.904 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.904 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.904 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.905 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.905 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.905 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.905 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.905 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.906 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.906 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.906 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.906 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.907 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.907 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.907 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.907 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.908 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.908 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.908 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.908 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.909 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.909 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.909 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.909 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.909 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.910 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.910 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.910 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.910 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.910 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.911 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.912 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.912 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.912 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.912 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.913 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.913 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.913 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.913 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.913 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.914 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.914 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.914 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.914 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.914 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.914 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.915 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.915 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.915 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.915 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.915 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.916 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.916 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.916 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.916 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.916 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.917 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.917 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.917 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.917 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.918 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.918 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.918 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.918 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.918 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.919 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.919 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.919 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.919 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.920 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.920 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.921 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.921 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.921 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.921 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.927 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:22:38.931 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:22:38.939 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.940 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.940 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.941 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 08:22:38.947 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.947 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.947 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.950 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.956 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.958 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.958 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.959 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 08:22:38.965 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.966 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.966 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.968 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 08:22:38.974 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.975 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.975 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.977 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.978 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.983 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.983 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.984 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.987 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 08:22:38.993 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:38.994 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 08:22:38.994 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 08:22:38.995 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 08:22:39.003 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:39.004 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:39.004 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:39.005 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:39.006 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 08:22:39.006 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 08:22:39.007 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:39.007 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:39.008 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:39.009 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:39.011 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 08:22:39.011 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 08:22:39.011 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 08:22:39.011 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 08:22:39.012 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 08:22:39.012 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 12:50:27.469 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Starting PedidosMsApplicationTests using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:27.470 [main] DEBUG [] [] c.j.p.PedidosMsApplicationTests - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:27.471 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - The following 1 profile is active: "test"
2025-08-04 12:50:27.977 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:28.014 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:28.511 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:28.525 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:50:28.633 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:28.633 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:50:28.650 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:29.083 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:29.091 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:29.092 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:29.095 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:29.098 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:29.100 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:29.101 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:29.101 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:29.101 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:29.102 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:29.102 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:29.102 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:29.103 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:29.103 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:29.104 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:29.104 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:29.105 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:29.105 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:29.105 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:29.113 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:29.115 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:29.268 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:50:29.896 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:29.951 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:29.967 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:29.969 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:29.970 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:29.971 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:29.972 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:29.973 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:29.974 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:29.974 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.058 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:30.336 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:30.348 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:30.392 [main] INFO  [] [] c.j.p.PedidosMsApplicationTests - Started PedidosMsApplicationTests in 3.145 seconds (process running for 3.702)
2025-08-04 12:50:30.685 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest]: RepositoryJpqlTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:50:30.699 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.repository.RepositoryJpqlTest
2025-08-04 12:50:30.701 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:30.715 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Starting RepositoryJpqlTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:30.715 [main] DEBUG [] [] c.j.p.i.r.RepositoryJpqlTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:30.715 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - The following 1 profile is active: "test"
2025-08-04 12:50:30.761 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:30.767 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:30.776 [main] INFO  [] [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-04 12:50:30.784 [main] INFO  [] [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:f8458f2f-8dba-4a67-b93e-e98dde570e01;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-04 12:50:30.798 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:30.799 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:30.814 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:30.814 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:30.815 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:30.815 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:30.815 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:30.816 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:30.816 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:30.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:30.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:30.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:30.817 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:30.818 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:30.818 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:30.818 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:30.819 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:30.819 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:30.820 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:30.820 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:30.820 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:30.821 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:30.822 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:30.861 [main] INFO  [] [] c.j.p.i.r.RepositoryJpqlTest - Started RepositoryJpqlTest in 0.16 seconds (process running for 4.172)
2025-08-04 12:50:30.867 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.869 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.870 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.871 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.872 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.878 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.889 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.890 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.890 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.891 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.891 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.892 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.893 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 12:50:30.899 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.901 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.901 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.901 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.902 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.903 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.911 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.911 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.912 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.912 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.912 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.913 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.913 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.914 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.918 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.919 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.919 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.920 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.920 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.921 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.924 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.925 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.925 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.925 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.926 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.926 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.926 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 12:50:30.930 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.931 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.932 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.932 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.933 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.933 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.937 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.938 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.938 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.938 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.938 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.939 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.939 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:30.942 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:30.945 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.946 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.946 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.947 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.947 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.951 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.953 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.953 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.954 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.954 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.954 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.954 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.954 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.955 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.959 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.960 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.961 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.961 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.961 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.962 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.963 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.964 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.964 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.964 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.964 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.965 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.965 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.966 [main] DEBUG [] [] org.hibernate.SQL - select count(z1_0.id)>0 from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.969 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.970 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.970 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.971 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.971 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.972 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.975 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.976 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.976 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.977 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.978 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.978 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.978 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 12:50:30.982 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.983 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.984 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.984 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.984 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.985 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.987 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.987 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.987 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.987 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.988 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.988 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.988 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.989 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.994 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.995 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:30.995 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.995 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:30.995 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.996 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:30.997 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.998 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:30.998 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.998 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:30.998 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.998 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:30.999 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 12:50:31.003 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.004 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.004 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.004 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.005 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.005 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.008 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.009 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.009 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.009 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.009 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.009 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.009 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 12:50:31.010 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=? order by z1_0.id
2025-08-04 12:50:31.013 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.014 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.014 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.014 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.015 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.015 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.016 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.018 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.018 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.018 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.018 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.019 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.019 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.019 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.019 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 12:50:31.024 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.026 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.026 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.027 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.027 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.027 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.030 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.030 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.030 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.030 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.031 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.031 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.031 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:31.033 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:31.036 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.037 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.037 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.038 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.038 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.039 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.043 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.043 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.043 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.043 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.044 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.044 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:31.044 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 12:50:31.050 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest]: PedidoControllerHttpStatusTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:50:31.056 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest
2025-08-04 12:50:31.059 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:31.071 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:31.071 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:31.071 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:31.187 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:31.193 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:31.243 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:31.244 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 12:50:31.244 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn27: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:31.244 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 12:50:31.244 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:31.257 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:31.258 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:31.258 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:31.259 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:31.259 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:31.259 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:31.260 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:31.260 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:31.260 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:31.260 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:31.260 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:31.260 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:31.261 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:31.261 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:31.261 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:31.261 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:31.261 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:31.262 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:31.262 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:31.262 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:31.263 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:31.302 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:31.309 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.310 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.310 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.310 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.311 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:31.312 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.312 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.313 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.313 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.338 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:31.419 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:31.439 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:31.439 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:31.441 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:31.446 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 12:50:31.459 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.4 seconds (process running for 4.769)
2025-08-04 12:50:31.462 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:31.463 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:31.463 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:31.463 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:31.464 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 12:50:31.486 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 12:50:31.488 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:31.501 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:31.501 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:31.501 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:31.599 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:31.605 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:31.640 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:31.641 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 12:50:31.641 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn32: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:31.641 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 12:50:31.641 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:31.654 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:31.654 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:31.654 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:31.654 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:31.655 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:31.655 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:31.655 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:31.655 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:31.655 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:31.656 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:31.657 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:31.657 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:31.657 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:31.657 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:31.660 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:31.700 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:31.709 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.710 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.711 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.711 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.712 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:31.713 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.713 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.714 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.715 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.736 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:31.798 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:31.802 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:31.802 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:31.803 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:31.809 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 12:50:31.817 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.33 seconds (process running for 5.128)
2025-08-04 12:50:31.824 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:50:31.827 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:50:31.829 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:31.830 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:31.830 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:31.831 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:31.831 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.861 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: b310abfc - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 12:50:31.861 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 12:50:31.868 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 12:50:31.868 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:50:31.868 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:50:31.870 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:31.870 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:50:31.870 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 12:50:31.886 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:31.887 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:31.887 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:31.888 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 12:50:31.888 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 12:50:31.889 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 12:50:31.889 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 12:50:31.889 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 12:50:31.890 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 12:50:31.891 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:31.892 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 12:50:31.892 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 12:50:31.892 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 12:50:31.892 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 12:50:31.892 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 12:50:31.892 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 12:50:31.893 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:31.894 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 12:50:31.894 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 12:50:31.894 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: b310abfc - Procesamiento completado en 33ms - Total: 1, Guardados: 1, Errores: 0
2025-08-04 12:50:31.946 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:31.946 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:31.946 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:31.947 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:31.947 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 12:50:31.954 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 12:50:31.955 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:31.970 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:31.970 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:31.970 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:32.064 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:32.069 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:32.106 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:32.107 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 12:50:32.108 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn39: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:32.108 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 12:50:32.108 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:32.120 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:32.121 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:32.121 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:32.121 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:32.121 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:32.121 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:32.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:32.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:32.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:32.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:32.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:32.122 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:32.123 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:32.123 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:32.123 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:32.124 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:32.124 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:32.124 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:32.124 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:32.125 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:32.126 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:32.154 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:32.159 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.160 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.160 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.160 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.161 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:32.162 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.163 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.163 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.163 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.177 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:32.245 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:32.249 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:32.249 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:32.250 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:32.254 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 12:50:32.263 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.308 seconds (process running for 5.574)
2025-08-04 12:50:32.267 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:50:32.268 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:50:32.269 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:32.269 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:32.269 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:32.269 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:32.269 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.271 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 45589086 - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 12:50:32.271 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 12:50:32.275 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:58) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:53) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) ~[surefire-booter-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) ~[surefire-booter-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) ~[surefire-booter-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) ~[surefire-booter-3.5.3.jar:3.5.3]
2025-08-04 12:50:32.279 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 12:50:32.294 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:32.294 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:32.295 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:32.295 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:32.295 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 12:50:32.319 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 12:50:32.321 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:32.331 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:32.331 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:32.331 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:32.430 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:32.435 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:32.468 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:32.469 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 12:50:32.469 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn43: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:32.469 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 12:50:32.469 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:32.482 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:32.482 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:32.482 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:32.482 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:32.483 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:32.483 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:32.483 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:32.483 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:32.483 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:32.483 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:32.484 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:32.485 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:32.485 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:32.516 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:32.520 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.521 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.521 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.521 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.522 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:32.524 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.525 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.525 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.526 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.538 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:32.599 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:32.603 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:32.603 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:32.604 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:32.613 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 10 ms
2025-08-04 12:50:32.622 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.302 seconds (process running for 5.933)
2025-08-04 12:50:32.625 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:50:32.627 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:50:32.627 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:32.627 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:32.627 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:32.628 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:32.628 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.629 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 07d33650 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 12:50:32.629 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 07d33650 - Archivo vacío recibido
2025-08-04 12:50:32.630 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 12:50:32.637 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:32.637 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:32.637 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:32.637 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:32.638 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 12:50:32.643 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 12:50:32.644 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:32.659 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:32.659 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:32.659 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:32.744 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:32.748 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:32.780 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:32.780 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 12:50:32.781 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn46: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:32.781 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 12:50:32.782 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:32.795 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:32.795 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:32.795 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:32.795 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:32.796 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:32.796 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:32.796 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:32.796 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:32.796 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:32.796 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:32.797 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:32.798 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:32.798 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:32.836 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:32.842 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.842 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.843 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.843 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.844 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:32.844 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.845 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.845 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.845 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.860 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:32.933 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:32.938 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:32.938 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:32.939 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:32.944 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 12:50:32.952 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.308 seconds (process running for 6.263)
2025-08-04 12:50:32.955 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:50:32.957 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:50:32.959 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:32.959 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:32.959 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:32.959 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:32.959 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.961 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: c95fb2e6 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 12:50:32.961 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 12:50:32.961 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 12:50:32.961 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:50:32.961 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:50:32.962 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:32.963 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:50:32.963 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 12:50:32.964 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:32.964 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:32.964 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:32.965 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 12:50:32.965 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 12:50:32.965 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 12:50:32.965 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 12:50:32.965 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 12:50:32.965 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 12:50:32.966 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:32.967 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 12:50:32.967 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 12:50:32.967 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 12:50:32.967 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 12:50:32.967 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: c95fb2e6 - Procesamiento completado en 6ms - Total: 1, Guardados: 0, Errores: 4
2025-08-04 12:50:32.967 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: c95fb2e6 - Ningún registro válido encontrado - 4 errores totales
2025-08-04 12:50:32.973 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:32.973 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:32.974 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:32.974 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:32.974 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 12:50:32.986 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 12:50:32.987 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:33.000 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:33.000 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:33.000 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:33.091 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:33.097 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:33.139 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:33.140 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 12:50:33.140 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn50: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:33.141 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 12:50:33.141 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:33.155 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:33.155 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:33.155 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:33.155 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:33.156 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:33.156 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:33.156 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:33.156 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:33.157 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:33.158 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:33.158 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:33.158 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:33.191 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:33.196 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.196 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.197 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.197 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.198 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:33.199 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.199 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.200 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.200 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.224 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:33.293 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:33.297 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:33.297 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:33.298 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:33.304 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 12:50:33.313 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.326 seconds (process running for 6.624)
2025-08-04 12:50:33.317 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:50:33.318 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:50:33.319 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:33.320 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:33.320 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:33.320 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:33.321 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.322 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: da765364 - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 12:50:33.322 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: da765364 - Formato de archivo inválido: pedidos.txt
2025-08-04 12:50:33.323 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 12:50:33.330 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:33.330 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:33.331 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:33.331 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:33.331 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 12:50:33.337 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
2025-08-04 12:50:33.339 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:50:33.350 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 22793 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:50:33.350 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:50:33.350 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:50:33.441 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:50:33.446 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 3 JPA repository interfaces.
2025-08-04 12:50:33.480 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:50:33.481 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
2025-08-04 12:50:33.481 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-8 - Added connection conn54: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:50:33.481 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
2025-08-04 12:50:33.481 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:50:33.492 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:33.492 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:33.492 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:33.492 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:50:33.493 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:50:33.493 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:50:33.493 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:50:33.493 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:50:33.494 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:50:33.495 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:50:33.495 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:50:33.495 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:33.524 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:50:33.529 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.529 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.530 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.530 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.531 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:50:33.532 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.533 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.533 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.533 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.547 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:50:33.609 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:50:33.613 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:50:33.613 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:50:33.614 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:50:33.618 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 12:50:33.634 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.296 seconds (process running for 6.944)
2025-08-04 12:50:33.637 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:50:33.638 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:50:33.639 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:33.639 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:50:33.639 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:33.639 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:50:33.640 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.642 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 18f09e68 - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 12:50:33.642 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 12:50:33.642 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 12:50:33.642 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:50:33.642 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:50:33.644 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:33.644 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:50:33.644 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 12:50:33.645 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.645 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 12:50:33.646 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 12:50:33.647 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.647 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 12:50:33.647 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 12:50:33.647 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 12:50:33.648 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 12:50:33.648 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 12:50:33.648 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 12:50:33.648 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 12:50:33.648 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:33.648 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 12:50:33.648 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 12:50:33.648 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.649 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 12:50:33.649 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 12:50:33.649 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 12:50:33.649 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 12:50:33.649 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 12:50:33.649 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 12:50:33.654 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.654 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 12:50:33.654 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 12:50:33.654 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 12:50:33.654 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 12:50:33.655 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.656 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 12:50:33.656 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 12:50:33.656 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 18f09e68 - Procesamiento completado en 14ms - Total: 2, Guardados: 1, Errores: 4
2025-08-04 12:50:33.656 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 18f09e68 - Procesamiento parcial - Guardados: 1, Errores: 4
2025-08-04 12:50:33.663 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest]: PedidoControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:50:33.664 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.controller.PedidoControllerIntegrationTest
2025-08-04 12:50:33.666 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.673 [main] DEBUG [] [] org.hibernate.SQL - update cliente set nombre=? where id=?
2025-08-04 12:50:33.682 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.684 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 435b65db - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 12:50:33.684 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 12:50:33.684 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 12:50:33.684 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:50:33.684 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:50:33.684 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 12:50:33.685 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 12:50:33.685 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 12:50:33.685 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.686 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.686 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.686 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.687 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 12:50:33.687 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 12:50:33.687 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 435b65db - Procesamiento completado en 3ms - Total: 1, Guardados: 1, Errores: 0
2025-08-04 12:50:33.691 [main] INFO  [] [] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest]: CacheAndIndexPerformanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-04 12:50:33.696 [main] INFO  [] [] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.josue.pedidos_ms.PedidosMsApplication for test class com.josue.pedidos_ms.infrastructure.performance.CacheAndIndexPerformanceTest
2025-08-04 12:50:33.699 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.700 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.700 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.701 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.701 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.702 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.702 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.703 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.723 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:33.724 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:50:33.728 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.729 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.730 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.733 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.737 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.738 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.738 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.740 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.741 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.741 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.742 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.742 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.742 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.742 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.743 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.743 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.743 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.744 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.744 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.744 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.744 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.744 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.745 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.745 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.745 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.746 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.746 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.746 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.746 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.746 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.747 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.747 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.747 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.748 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.748 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.748 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.748 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.748 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.749 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.749 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.750 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.750 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.750 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.750 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.750 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.751 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.751 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.751 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.751 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.752 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.752 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.752 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.752 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.752 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.753 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.753 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.753 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.753 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.754 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.754 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.754 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.754 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.755 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.755 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.755 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.755 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.756 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.756 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.756 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.756 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.757 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.757 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.758 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.758 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.759 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.759 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.759 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.759 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.759 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.760 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.760 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.760 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.761 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.761 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.761 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.761 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.761 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.762 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.762 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.762 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.762 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.762 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.763 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.763 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.763 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.763 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.763 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.764 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.764 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.764 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.764 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.764 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.765 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.765 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.765 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.765 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.765 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.766 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.766 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.766 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.766 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.767 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.767 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.767 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.767 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.767 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.768 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.768 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.768 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.768 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.769 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.769 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.769 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.769 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.769 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.769 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.770 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.770 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.770 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.770 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.771 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.771 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.771 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.771 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.771 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.772 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.772 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.772 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.772 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.772 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.773 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.773 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.773 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.774 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.774 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.774 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.775 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.775 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.775 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.775 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.775 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.776 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.776 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.776 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.776 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.777 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.777 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.777 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.777 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.778 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.778 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.779 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.779 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.779 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.780 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.780 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.780 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.780 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.781 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.781 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.781 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.781 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.781 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.781 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.782 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.782 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.782 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.783 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.783 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.783 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.783 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.783 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.784 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.784 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.784 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.784 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.785 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.785 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.786 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.786 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.786 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.787 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.788 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.788 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.789 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.789 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.790 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.790 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.790 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.791 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.792 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.792 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.793 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.793 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.793 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.793 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.793 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.794 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.794 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.794 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.794 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.795 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.795 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.795 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.795 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.795 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.796 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.796 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.796 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.797 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.797 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.797 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.797 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.797 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.798 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.798 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.798 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.798 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.798 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.798 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.799 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.799 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.799 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.799 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.799 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.800 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.800 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.800 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.800 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.800 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.800 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.801 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.801 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.801 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.801 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.801 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.801 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.802 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.802 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.802 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.802 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.802 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.803 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.803 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.803 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.803 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.803 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.804 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.804 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.804 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.804 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.804 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.805 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.805 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.805 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.806 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.807 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.807 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.807 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.807 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.808 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.808 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.808 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.808 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.809 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.809 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.809 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.809 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.809 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.810 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.810 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.810 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.810 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.811 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.811 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.811 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.811 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.811 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.812 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.812 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.812 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.812 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.812 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.812 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.813 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.813 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.813 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.813 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.813 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.814 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.814 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.814 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.814 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.814 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.815 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.815 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.815 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.815 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.815 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.815 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.816 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.816 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.816 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.817 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.817 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.817 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.817 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.817 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.817 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.818 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.818 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.818 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.818 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.819 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.819 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.819 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.819 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.819 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.819 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.820 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.820 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.820 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.820 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.820 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.820 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.821 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.821 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.821 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.821 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.822 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.823 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.823 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.823 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.824 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.824 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.824 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.825 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.825 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.825 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.825 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.825 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.826 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.826 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.826 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.826 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.827 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.828 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.828 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.829 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.829 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.829 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.834 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.834 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.842 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.851 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.856 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.857 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.858 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.859 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.860 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.861 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.862 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.864 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.865 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.867 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.881 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.886 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.887 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.890 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.897 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.900 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.901 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.902 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.902 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.903 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.903 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.904 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.904 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.904 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.906 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.916 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.924 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.932 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.933 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.947 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.960 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.961 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.961 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.962 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.963 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.963 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.964 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.964 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.965 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.965 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.965 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.965 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.966 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.966 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.966 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.967 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.968 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.969 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.969 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.973 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.986 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.987 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.987 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.987 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.988 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.988 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.988 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.989 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.990 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.991 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.992 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.992 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.992 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.992 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.992 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.993 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.993 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.993 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.993 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.994 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.994 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.994 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.994 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.994 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.994 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.995 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.996 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.996 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.996 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.996 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.996 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.997 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.997 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.997 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.997 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.997 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.998 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.998 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.998 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.998 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.998 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.998 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:33.999 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.000 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.000 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.000 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.000 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.000 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.001 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.001 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.001 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.001 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.001 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.001 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.002 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.002 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.002 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.002 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.002 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.002 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.003 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.004 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.004 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.004 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.004 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.005 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.005 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.005 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.005 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.006 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.006 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.007 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.007 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.007 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.007 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.008 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.008 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.008 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.008 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.008 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.009 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.009 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.009 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.009 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.009 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.009 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.010 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.010 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.010 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.010 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.010 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.010 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.011 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.011 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.011 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.011 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.011 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.012 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.012 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.012 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.012 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.012 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.012 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.013 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.013 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.013 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.013 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.013 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.013 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.014 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.014 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.014 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.014 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.014 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.015 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.015 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.015 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.015 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.016 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.016 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.016 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.016 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.017 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.017 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.017 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.018 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.018 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.018 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.019 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.019 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.019 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.019 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.019 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.019 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.020 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.020 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.020 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.020 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.021 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.021 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.021 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.022 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.023 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.023 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.024 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.025 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.026 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.026 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.026 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.027 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.028 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.028 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.029 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.030 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.030 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.030 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.030 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.031 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.031 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.031 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.031 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.031 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.032 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.032 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.032 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.033 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.033 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.034 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.034 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.034 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.034 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.035 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.035 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.035 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.035 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.035 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.036 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.036 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.036 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.036 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.036 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.037 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.037 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.037 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.037 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.038 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.038 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.038 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.038 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.038 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.038 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.039 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.039 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.040 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.040 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.040 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.041 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.041 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.041 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.042 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.042 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.042 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.042 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.042 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.042 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.043 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.044 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.045 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.045 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.045 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.045 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.045 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.045 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.046 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.046 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.046 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.046 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.046 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.047 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.048 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.048 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.048 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.048 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.048 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.049 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.050 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.051 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.052 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.052 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.052 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.052 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.052 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.053 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.053 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.053 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.054 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.054 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.054 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.055 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.055 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.055 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.055 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.055 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.055 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.056 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.056 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.056 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.056 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.057 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.057 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.057 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.057 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.058 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.058 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.058 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.058 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.059 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.059 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.059 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.059 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.060 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.060 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.060 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.060 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.060 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.060 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.061 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.061 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.061 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.061 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.062 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.062 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.062 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.063 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.064 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.064 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.064 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.064 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.065 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.065 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.065 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.065 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.066 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.067 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.067 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.067 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.067 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.067 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.067 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.068 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.068 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.068 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.068 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.068 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.069 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.069 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.069 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.069 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.069 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.070 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.070 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.070 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.071 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.071 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.071 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.071 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.071 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.071 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.072 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.073 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.073 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:50:34.073 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.074 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:50:34.074 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.074 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.074 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.075 [main] DEBUG [] [] org.hibernate.SQL - insert into pedido (cliente_id,estado,fecha_entrega,requiere_refrigeracion,zona_entrega,numero_pedido) values (?,?,?,?,?,?)
2025-08-04 12:50:34.077 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.estado=? order by p1_0.fecha_entrega
2025-08-04 12:50:34.084 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega from pedido p1_0 where p1_0.fecha_entrega between ? and ? order by p1_0.fecha_entrega
2025-08-04 12:50:34.085 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.085 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.085 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.085 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.085 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.086 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.087 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.088 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.089 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.090 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.090 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.090 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.091 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.092 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.093 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.093 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.093 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.094 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.094 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.094 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.094 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.094 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.095 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.096 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.096 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.096 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.096 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.100 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 12:50:34.103 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 12:50:34.109 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.110 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.110 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.111 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where c1_0.id=? order by p1_0.fecha_entrega desc
2025-08-04 12:50:34.115 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.115 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.116 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.120 [main] DEBUG [] [] org.hibernate.SQL - select count(c1_0.id)>0 from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.125 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.125 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.126 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.126 [main] DEBUG [] [] org.hibernate.SQL - select count(p1_0.numero_pedido) from pedido p1_0 join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.requiere_refrigeracion=true and ze1_0.soporte_refrigeracion=false
2025-08-04 12:50:34.130 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.130 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.131 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.132 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 order by c1_0.nombre
2025-08-04 12:50:34.138 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.138 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.138 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.140 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.142 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.145 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.146 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.146 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.148 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.soporte_refrigeracion=true order by z1_0.id
2025-08-04 12:50:34.152 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.153 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:50:34.153 [main] DEBUG [] [] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:50:34.154 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:50:34.444 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 167 bytes)
2025-08-04 12:50:34.444 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 12:50:34.444 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:50:34.444 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:50:34.445 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:50:34.445 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 12:50:34.445 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Cliente Test
2025-08-04 12:50:34.445 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 12:50:34.445 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 12:50:34.445 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 12:50:34.446 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 12:50:34.447 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 12:50:34.447 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 12:50:34.447 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 12:50:34.447 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-999
2025-08-04 12:50:34.447 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-999
2025-08-04 12:50:34.447 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 12:50:34.447 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 12:50:34.447 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 12:50:34.447 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 12:50:34.447 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA2 con refrigeración: false
2025-08-04 12:50:34.447 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA2
2025-08-04 12:50:34.448 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 12:50:34.448 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 12:50:34.448 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 12:50:34.448 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 12:50:34.448 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 12:50:34.462 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:34.463 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:34.464 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:34.465 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:34.466 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:50:34.467 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:50:34.468 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:34.468 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:34.469 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:34.470 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:34.475 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:50:34.475 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:50:34.475 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:50:34.475 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:50:34.476 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
2025-08-04 12:50:34.477 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
2025-08-04 12:52:12.729 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:12.730 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:12.730 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:13.239 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:13.275 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:13.764 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:13.778 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 12:52:13.881 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:13.882 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 12:52:13.895 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:14.322 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:14.324 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:14.325 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:14.328 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:14.331 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:14.332 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:14.333 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:14.333 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:14.334 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:14.334 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:14.334 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:14.335 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:14.335 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:14.335 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:14.336 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:14.336 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:14.337 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:14.337 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:14.337 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:14.350 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:14.353 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:14.500 [main] INFO  [] [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 12:52:15.073 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:15.118 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:15.132 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:15.135 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:15.136 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:15.137 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:15.138 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:15.139 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:15.140 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:15.141 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:15.228 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:15.504 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:15.525 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:15.526 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:15.532 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:15.547 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 21 ms
2025-08-04 12:52:15.591 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 3.08 seconds (process running for 3.7)
2025-08-04 12:52:15.621 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:15.622 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:15.623 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:15.624 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:15.625 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 12:52:15.626 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 12:52:15.628 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:52:15.641 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:15.642 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:15.642 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:15.763 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:15.769 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:15.817 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:15.818 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-04 12:52:15.827 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:15.827 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-04 12:52:15.827 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:15.843 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:15.844 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:15.844 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:15.844 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:15.845 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:15.845 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:15.845 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:15.846 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:15.846 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:15.846 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:15.846 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:15.847 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:15.847 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:15.847 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:15.847 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:15.848 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:15.848 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:15.848 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:15.848 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:15.849 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:15.850 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:15.909 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:15.918 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:15.918 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:15.919 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:15.919 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:15.921 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:15.922 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:15.923 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:15.924 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:15.925 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:15.949 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:16.044 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:16.051 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:16.051 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:16.052 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:16.059 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 8 ms
2025-08-04 12:52:16.079 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.451 seconds (process running for 4.189)
2025-08-04 12:52:16.340 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:52:16.343 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:52:16.345 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:16.346 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:16.346 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:16.346 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:16.347 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.375 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 9359bbcf - Archivo: pedidos.csv - Tamaño: 186 bytes
2025-08-04 12:52:16.375 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 186 bytes)
2025-08-04 12:52:16.382 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 2 filas de datos (excluyendo cabecera)
2025-08-04 12:52:16.382 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:52:16.382 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:52:16.392 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:52:16.394 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:52:16.394 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 12:52:16.408 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:16.408 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:16.409 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:16.410 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 12:52:16.410 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 12:52:16.410 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 12:52:16.410 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 12:52:16.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 12:52:16.411 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 12:52:16.412 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.412 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 12:52:16.413 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 12:52:16.413 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 12:52:16.418 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 12:52:16.418 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 12:52:16.418 [main] DEBUG [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P002
2025-08-04 12:52:16.419 [main] INFO  [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P002
2025-08-04 12:52:16.419 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:52:16.420 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P002
2025-08-04 12:52:16.420 [main] DEBUG [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 12:52:16.420 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:16.420 [main] WARN  [P002] [CONVERSION] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 12:52:16.420 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 12:52:16.420 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 12:52:16.420 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: INVALIDO
2025-08-04 12:52:16.420 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 12:52:16.420 [main] DEBUG [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: false
2025-08-04 12:52:16.421 [main] DEBUG [P002] [CONVERSION] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.421 [main] WARN  [P002] [CONVERSION] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 12:52:16.421 [main] INFO  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 12:52:16.421 [main] WARN  [P002] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 12:52:16.421 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 12:52:16.423 [main] DEBUG [P002] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:52:16.426 [main] INFO  [P002] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 12:52:16.426 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 2, Guardados: 1, Errores: 4
2025-08-04 12:52:16.427 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: 9359bbcf - Procesamiento completado en 51ms - Total: 2, Guardados: 1, Errores: 4
2025-08-04 12:52:16.427 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: 9359bbcf - Procesamiento parcial - Guardados: 1, Errores: 4
2025-08-04 12:52:16.482 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:16.482 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:16.483 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:16.483 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:16.484 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-04 12:52:16.484 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-04 12:52:16.486 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:52:16.501 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:16.501 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:16.501 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:16.606 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:16.611 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:16.649 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:16.650 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-08-04 12:52:16.651 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:16.651 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-08-04 12:52:16.651 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:16.665 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:16.665 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:16.666 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:16.666 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:16.666 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:16.667 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:16.667 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:16.667 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:16.667 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:16.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:16.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:16.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:16.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:16.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:16.668 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:16.669 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:16.669 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:16.669 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:16.669 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:16.670 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:16.671 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:16.712 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:16.718 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:16.719 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:16.719 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:16.720 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:16.721 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:16.721 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.722 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:16.723 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.723 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:16.740 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:16.811 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:16.816 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:16.817 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:16.818 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:16.823 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 12:52:16.842 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.356 seconds (process running for 4.952)
2025-08-04 12:52:16.846 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:52:16.848 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:52:16.849 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:16.849 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:16.850 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:16.850 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:16.850 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.853 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: b382146f - Archivo: pedidos.csv - Tamaño: 122 bytes
2025-08-04 12:52:16.853 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 122 bytes)
2025-08-04 12:52:16.853 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 12:52:16.853 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:52:16.853 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:52:16.854 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:52:16.855 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:52:16.855 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-123
2025-08-04 12:52:16.857 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:16.858 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:16.858 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:16.859 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_VALIDO] Cliente válido encontrado: CLI-123 - Test Cliente
2025-08-04 12:52:16.859 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2099-08-10
2025-08-04 12:52:16.859 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_VALIDO] Fecha de entrega válida: 2099-08-10 (días desde hoy: 27034)
2025-08-04 12:52:16.859 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: PENDIENTE
2025-08-04 12:52:16.859 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_VALIDO] Estado válido: PENDIENTE
2025-08-04 12:52:16.859 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA1 con refrigeración: true
2025-08-04 12:52:16.860 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:16.861 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_VALIDO] Zona válida: ZONA1 - Soporte refrigeración: true - Requerido: true
2025-08-04 12:52:16.861 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_VALIDO] Todas las validaciones pasaron exitosamente
2025-08-04 12:52:16.861 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Convirtiendo DTO a entidad de dominio: P001
2025-08-04 12:52:16.861 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Conversión exitosa - Pedido: P001, Cliente: CLI-123, Fecha: 2099-08-10, Estado: PENDIENTE, Zona: ZONA1, Refrigeración: true
2025-08-04 12:52:16.861 [main] DEBUG [P001] [CONVERSION] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_PROCESADO] Pedido válido agregado para guardado: P001
2025-08-04 12:52:16.861 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardando 1 pedidos válidos en base de datos
2025-08-04 12:52:16.862 [main] DEBUG [P001] [PERSISTENCIA] org.hibernate.SQL - select p1_0.numero_pedido,p1_0.cliente_id,c1_0.id,c1_0.nombre,p1_0.estado,p1_0.fecha_entrega,p1_0.requiere_refrigeracion,p1_0.zona_entrega,ze1_0.id,ze1_0.soporte_refrigeracion from pedido p1_0 join cliente c1_0 on c1_0.id=p1_0.cliente_id join zona ze1_0 on ze1_0.id=p1_0.zona_entrega where p1_0.numero_pedido=?
2025-08-04 12:52:16.863 [main] INFO  [P001] [PERSISTENCIA] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_GUARDADO] Guardados exitosamente 1 pedidos
2025-08-04 12:52:16.863 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 1, Errores: 0
2025-08-04 12:52:16.863 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: b382146f - Procesamiento completado en 10ms - Total: 1, Guardados: 1, Errores: 0
2025-08-04 12:52:16.869 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:16.870 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:16.870 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:16.870 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:16.871 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-08-04 12:52:16.891 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-08-04 12:52:16.893 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:52:16.909 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:16.913 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:16.913 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:17.006 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:17.012 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:17.050 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:17.051 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-08-04 12:52:17.051 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection conn25: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:17.051 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-08-04 12:52:17.052 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:17.065 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:17.065 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:17.066 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:17.066 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:17.066 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:17.067 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:17.067 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:17.067 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:17.067 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:17.067 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:17.068 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:17.069 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:17.069 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:17.069 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:17.070 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:17.109 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:17.115 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:17.116 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.116 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:17.117 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.118 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:17.118 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.119 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.119 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.120 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.135 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:17.207 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:17.212 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:17.212 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:17.213 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:17.218 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 6 ms
2025-08-04 12:52:17.236 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.343 seconds (process running for 5.345)
2025-08-04 12:52:17.239 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:52:17.241 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:52:17.242 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:17.242 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:17.242 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:17.242 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:17.243 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.244 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 6108c3a4 - Archivo: pedidos.csv - Tamaño: 61 bytes
2025-08-04 12:52:17.244 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 61 bytes)
2025-08-04 12:52:17.248 [main] ERROR [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [[ERROR_LECTURA_CSV, pedidos.csv]] Error al leer archivo CSV: {}
com.opencsv.exceptions.CsvMalformedLineException: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
	at com.opencsv.CSVReader.primeNextRecord(CSVReader.java:245) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.flexibleRead(CSVReader.java:610) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readNext(CSVReader.java:204) ~[opencsv-5.8.jar:na]
	at com.opencsv.CSVReader.readAll(CSVReader.java:186) ~[opencsv-5.8.jar:na]
	at com.josue.pedidos_ms.application.usecase.CargarPedidosUseCase.procesarArchivo(CargarPedidosUseCase.java:58) ~[classes/:na]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoController.cargarArchivo(PedidoController.java:53) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72) ~[spring-test-6.2.9.jar:6.2.9]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.43.jar:6.0]
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132) ~[spring-test-6.2.9.jar:6.2.9]
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201) ~[spring-test-6.2.9.jar:6.2.9]
	at com.josue.pedidos_ms.infrastructure.controller.PedidoControllerHttpStatusTest.debeRetornar400CuandoElCsvEsMalformado(PedidoControllerHttpStatusTest.java:117) ~[test-classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479) ~[junit-platform-commons-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) ~[junit-jupiter-engine-5.12.2.jar:5.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) ~[na:na]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47) ~[junit-platform-launcher-1.12.2.jar:1.12.2]
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:194) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124) ~[surefire-junit-platform-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) ~[surefire-booter-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) ~[surefire-booter-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) ~[surefire-booter-3.5.3.jar:3.5.3]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) ~[surefire-booter-3.5.3.jar:3.5.3]
2025-08-04 12:52:17.252 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Archivo CSV ilegible o mal formateado: Unterminated quoted field at end of CSV line. Beginning of lost text: [P001,CLI-123,2099-08-10
]
2025-08-04 12:52:17.264 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:17.264 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:17.265 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:17.265 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:17.266 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-08-04 12:52:17.292 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-08-04 12:52:17.293 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:52:17.307 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:17.307 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:17.307 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:17.418 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:17.424 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:17.458 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:17.459 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-08-04 12:52:17.459 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection conn30: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:17.459 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-08-04 12:52:17.459 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:17.474 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:17.475 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:17.475 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:17.475 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:17.475 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:17.476 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:17.476 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:17.476 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:17.476 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:17.476 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:17.477 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:17.478 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:17.478 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:17.478 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:17.479 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:17.509 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:17.515 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:17.515 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.516 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:17.516 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.517 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:17.518 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.519 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.519 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.519 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.536 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:17.611 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:17.615 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:17.616 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:17.617 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:17.621 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 12:52:17.638 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.345 seconds (process running for 5.747)
2025-08-04 12:52:17.642 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:52:17.647 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:52:17.648 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:17.649 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:17.649 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:17.649 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:17.649 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.651 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 50c8e9f0 - Archivo: pedidos.csv - Tamaño: 0 bytes
2025-08-04 12:52:17.651 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ARCHIVO_VACIO] Request ID: 50c8e9f0 - Archivo vacío recibido
2025-08-04 12:52:17.652 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: El archivo está vacío
2025-08-04 12:52:17.660 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:17.660 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:17.661 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:17.661 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:17.661 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-08-04 12:52:17.671 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-08-04 12:52:17.673 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:52:17.685 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:17.685 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:17.686 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:17.770 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:17.775 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:17.816 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:17.816 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
2025-08-04 12:52:17.817 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-6 - Added connection conn34: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:17.817 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
2025-08-04 12:52:17.818 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:17.831 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:17.832 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:17.832 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:17.832 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:17.832 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:17.833 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:17.834 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:17.835 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:17.835 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:17.865 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:17.870 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:17.871 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.871 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:17.872 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.873 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:17.874 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.875 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.875 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.876 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.891 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:17.960 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:17.964 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:17.964 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:17.965 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:17.969 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-08-04 12:52:17.987 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.315 seconds (process running for 6.096)
2025-08-04 12:52:17.991 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:52:17.992 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:52:17.993 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:17.993 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:17.994 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:17.994 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:17.994 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:17.996 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: ec427b68 - Archivo: pedidos.csv - Tamaño: 147 bytes
2025-08-04 12:52:17.996 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Iniciando procesamiento de archivo: pedidos.csv (tamaño: 147 bytes)
2025-08-04 12:52:17.996 [main] INFO  [] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_CARGA_CSV] Procesando 1 filas de datos (excluyendo cabecera)
2025-08-04 12:52:17.996 [main] DEBUG [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [INICIO_VALIDACION] Iniciando validación completa de pedido: P001
2025-08-04 12:52:17.996 [main] INFO  [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [INICIO_VALIDACION] Validando número de pedido: P001
2025-08-04 12:52:17.997 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select count(p1_0.numero_pedido)>0 from pedido p1_0 where p1_0.numero_pedido=?
2025-08-04 12:52:17.998 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.PedidoValidator - [PEDIDO_VALIDO] Número de pedido único y válido: P001
2025-08-04 12:52:17.998 [main] DEBUG [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [INICIO_VALIDACION] Validando cliente: CLI-INEXISTENTE
2025-08-04 12:52:17.999 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:17.999 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:17.999 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:18.000 [main] WARN  [P001] [CARGA_CSV] c.j.p.d.service.ClienteValidator - [PEDIDO_INVALIDO] Cliente no encontrado en base de datos: CLI-INEXISTENTE
2025-08-04 12:52:18.000 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [INICIO_VALIDACION] Validando fecha de entrega: 2020-01-01
2025-08-04 12:52:18.000 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.FechaValidator - [PEDIDO_INVALIDO] Fecha de entrega en el pasado: 2020-01-01 (hoy: 2025-08-04)
2025-08-04 12:52:18.000 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [INICIO_VALIDACION] Validando estado: ESTADO_INVALIDO
2025-08-04 12:52:18.000 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.EstadoValidator - [PEDIDO_INVALIDO] Estado inválido: ESTADO_INVALIDO. Estados válidos: PENDIENTE, CONFIRMADO, ENTREGADO
2025-08-04 12:52:18.000 [main] DEBUG [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [INICIO_VALIDACION] Validando zona: ZONA_INEXISTENTE con refrigeración: true
2025-08-04 12:52:18.001 [main] DEBUG [P001] [CARGA_CSV] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:18.002 [main] WARN  [P001] [CARGA_CSV] c.j.p.domain.service.ZonaValidator - [PEDIDO_INVALIDO] Zona no encontrada en base de datos: ZONA_INEXISTENTE
2025-08-04 12:52:18.002 [main] INFO  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [ESTADISTICAS_VALIDACION] Validación completada con 4 errores: [Clientes no encontrados, Fecha de entrega inválida, Estado inválido, Zonas inválidas]
2025-08-04 12:52:18.002 [main] WARN  [P001] [CARGA_CSV] c.j.p.a.usecase.CargarPedidosUseCase - [PEDIDO_INVALIDO] Pedido con 4 errores de validación
2025-08-04 12:52:18.002 [main] INFO  [] [] c.j.p.a.usecase.CargarPedidosUseCase - [RESUMEN_PROCESAMIENTO] Procesamiento completado - Total: 1, Guardados: 0, Errores: 4
2025-08-04 12:52:18.002 [main] INFO  [] [] c.j.p.i.controller.PedidoController - [FIN_CARGA_CSV] Request ID: ec427b68 - Procesamiento completado en 6ms - Total: 1, Guardados: 0, Errores: 4
2025-08-04 12:52:18.002 [main] WARN  [] [] c.j.p.i.controller.PedidoController - [ESTADISTICAS_VALIDACION] Request ID: ec427b68 - Ningún registro válido encontrado - 4 errores totales
2025-08-04 12:52:18.008 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:18.009 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:18.009 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:18.009 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:18.010 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
2025-08-04 12:52:18.023 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
2025-08-04 12:52:18.025 [main] INFO  [] [] o.s.b.d.r.RestartApplicationListener - Restart disabled due to context in which it is running
2025-08-04 12:52:18.036 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Starting PedidoControllerHttpStatusTest using Java 17.0.15 with PID 24203 (started by josuepatricio in /Users/josuepatricio/Downloads/pedidos-ms)
2025-08-04 12:52:18.036 [main] DEBUG [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-04 12:52:18.036 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - The following 1 profile is active: "test"
2025-08-04 12:52:18.125 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 12:52:18.133 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
2025-08-04 12:52:18.167 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 12:52:18.167 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
2025-08-04 12:52:18.168 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-7 - Added connection conn38: url=jdbc:h2:mem:testdb user=SA
2025-08-04 12:52:18.168 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
2025-08-04 12:52:18.168 [main] WARN  [] [] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 12:52:18.183 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:18.183 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:18.183 [main] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:18.183 [main] DEBUG [] [] org.hibernate.SQL - create table cliente (id varchar(50) not null, nombre varchar(200), primary key (id))
2025-08-04 12:52:18.184 [main] DEBUG [] [] org.hibernate.SQL - create table pedido (fecha_entrega date not null, requiere_refrigeracion boolean not null, cliente_id varchar(50) not null, numero_pedido varchar(50) not null, zona_entrega varchar(50) not null, estado enum ('CONFIRMADO','ENTREGADO','PENDIENTE') not null, primary key (numero_pedido))
2025-08-04 12:52:18.184 [main] DEBUG [] [] org.hibernate.SQL - create table zona (soporte_refrigeracion boolean not null, id varchar(50) not null, primary key (id))
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_nombre on cliente (nombre)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_cliente_id_nombre on cliente (id, nombre)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado on pedido (estado)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_fecha_entrega on pedido (fecha_entrega)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_id on pedido (cliente_id)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_zona_entrega on pedido (zona_entrega)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_requiere_refrigeracion on pedido (requiere_refrigeracion)
2025-08-04 12:52:18.185 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_estado_fecha on pedido (estado, fecha_entrega)
2025-08-04 12:52:18.186 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_cliente_fecha on pedido (cliente_id, fecha_entrega)
2025-08-04 12:52:18.186 [main] DEBUG [] [] org.hibernate.SQL - create index idx_pedido_refrigeracion_zona on pedido (requiere_refrigeracion, zona_entrega)
2025-08-04 12:52:18.186 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_soporte_refrigeracion on zona (soporte_refrigeracion)
2025-08-04 12:52:18.186 [main] DEBUG [] [] org.hibernate.SQL - create index idx_zona_id_soporte on zona (id, soporte_refrigeracion)
2025-08-04 12:52:18.186 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK30s8j2ktpay6of18lbyqn3632 foreign key (cliente_id) references cliente
2025-08-04 12:52:18.187 [main] DEBUG [] [] org.hibernate.SQL - alter table if exists pedido add constraint FK1aokin5yjk78h5cax5jju4fs9 foreign key (zona_entrega) references zona
2025-08-04 12:52:18.187 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:18.232 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from cliente c1_0
2025-08-04 12:52:18.240 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:18.241 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:18.241 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0 where c1_0.id=?
2025-08-04 12:52:18.241 [main] DEBUG [] [] org.hibernate.SQL - insert into cliente (nombre,id) values (?,?)
2025-08-04 12:52:18.242 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from zona z1_0
2025-08-04 12:52:18.243 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:18.243 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:18.244 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:18.244 [main] DEBUG [] [] org.hibernate.SQL - insert into zona (soporte_refrigeracion,id) values (?,?)
2025-08-04 12:52:18.257 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 12:52:18.329 [main] INFO  [] [] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-04 12:52:18.336 [main] INFO  [] [] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-08-04 12:52:18.336 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-08-04 12:52:18.337 [main] INFO  [] [] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-08-04 12:52:18.343 [main] INFO  [] [] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-08-04 12:52:18.362 [main] INFO  [] [] c.j.p.i.c.PedidoControllerHttpStatusTest - Started PedidoControllerHttpStatusTest in 0.337 seconds (process running for 6.471)
2025-08-04 12:52:18.365 [main] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.nombre from cliente c1_0
2025-08-04 12:52:18.366 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0
2025-08-04 12:52:18.367 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:18.368 [main] DEBUG [] [] org.hibernate.SQL - delete from cliente where id=?
2025-08-04 12:52:18.368 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:18.368 [main] DEBUG [] [] org.hibernate.SQL - delete from zona where id=?
2025-08-04 12:52:18.368 [main] DEBUG [] [] org.hibernate.SQL - select z1_0.id,z1_0.soporte_refrigeracion from zona z1_0 where z1_0.id=?
2025-08-04 12:52:18.370 [main] INFO  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [INICIO_CARGA_CSV] POST /pedidos/cargar - Request ID: 1e7c0c72 - Archivo: pedidos.txt - Tamaño: 9 bytes
2025-08-04 12:52:18.370 [main] WARN  [] [HTTP_REQUEST] c.j.p.i.controller.PedidoController - [ERROR_LECTURA_CSV] Request ID: 1e7c0c72 - Formato de archivo inválido: pedidos.txt
2025-08-04 12:52:18.371 [main] WARN  [] [] c.j.p.i.c.GlobalExceptionHandler - [ERROR_LECTURA_CSV] Error de validación CSV: Solo se permiten archivos CSV
2025-08-04 12:52:18.411 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 12:52:18.411 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists cliente cascade 
2025-08-04 12:52:18.411 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists pedido cascade 
2025-08-04 12:52:18.412 [SpringApplicationShutdownHook] DEBUG [] [] org.hibernate.SQL - drop table if exists zona cascade 
2025-08-04 12:52:18.412 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
2025-08-04 12:52:18.438 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
